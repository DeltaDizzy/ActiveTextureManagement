using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using UnityEngine;

namespace LibSquishPort
{
    class SingleColourFit : ColourFit
    {
        byte[] m_colour = new byte[3];
	    Vector3 m_start;
	    Vector3 m_end;
	    byte[] m_index = new byte[1];
	    int m_error;
	    int m_besterror;

        class SourceBlock
{
	public byte start;
	public byte end;
	public byte error;
    public SourceBlock(byte[] array)
    {start = array[0]; end = array[1]; error = array[2];}
}

class SingleColourLookup
{
	public SourceBlock[] sources = new SourceBlock[2];
    public SingleColourLookup(byte[] a,byte[] b)
    {
        sources[0] = new SourceBlock(a);
        sources[1] = new SourceBlock(b);
    }

}

#region
static SingleColourLookup[] lookup_5_3 = 
    {
	new SingleColourLookup( new byte[]{ 0, 0, 0 }, new byte[]{ 0, 0, 0 } ),
	new SingleColourLookup( new byte[]{0, 0, 1 }, new byte[]{ 0, 0, 1 } ),
	new SingleColourLookup( new byte[]{0, 0, 2 }, new byte[]{ 0, 0, 2 } ),
	new SingleColourLookup( new byte[]{0, 0, 3 }, new byte[]{ 0, 1, 1 } ),
	new SingleColourLookup( new byte[]{0, 0, 4 }, new byte[]{ 0, 1, 0 } ),
	new SingleColourLookup( new byte[]{1, 0, 3 }, new byte[]{ 0, 1, 1 } ),
	new SingleColourLookup( new byte[]{1, 0, 2 }, new byte[]{ 0, 1, 2 } ),
	new SingleColourLookup( new byte[]{1, 0, 1 }, new byte[]{ 0, 2, 1 } ),
	new SingleColourLookup( new byte[]{1, 0, 0 }, new byte[]{ 0, 2, 0 } ),
	new SingleColourLookup( new byte[]{1, 0, 1 }, new byte[]{ 0, 2, 1 } ),
	new SingleColourLookup( new byte[]{1, 0, 2 }, new byte[]{ 0, 2, 2 } ),
	new SingleColourLookup( new byte[]{1, 0, 3 }, new byte[]{ 0, 3, 1 } ),
	new SingleColourLookup( new byte[]{1, 0, 4 }, new byte[]{ 0, 3, 0 } ),
	new SingleColourLookup( new byte[]{2, 0, 3 }, new byte[]{ 0, 3, 1 } ),
	new SingleColourLookup( new byte[]{2, 0, 2 }, new byte[]{ 0, 3, 2 } ),
	new SingleColourLookup( new byte[]{2, 0, 1 }, new byte[]{ 0, 4, 1 } ),
	new SingleColourLookup( new byte[]{2, 0, 0 }, new byte[]{ 0, 4, 0 } ),
	new SingleColourLookup( new byte[]{2, 0, 1 }, new byte[]{ 0, 4, 1 } ),
	new SingleColourLookup( new byte[]{2, 0, 2 }, new byte[]{ 0, 4, 2 } ),
	new SingleColourLookup( new byte[]{2, 0, 3 }, new byte[]{ 0, 5, 1 } ),
	new SingleColourLookup( new byte[]{2, 0, 4 }, new byte[]{ 0, 5, 0 } ),
	new SingleColourLookup( new byte[]{3, 0, 3 }, new byte[]{ 0, 5, 1 } ),
	new SingleColourLookup( new byte[]{3, 0, 2 }, new byte[]{ 0, 5, 2 } ),
	new SingleColourLookup( new byte[]{3, 0, 1 }, new byte[]{ 0, 6, 1 } ),
	new SingleColourLookup( new byte[]{3, 0, 0 }, new byte[]{ 0, 6, 0 } ),
	new SingleColourLookup( new byte[]{3, 0, 1 }, new byte[]{ 0, 6, 1 } ),
	new SingleColourLookup( new byte[]{3, 0, 2 }, new byte[]{ 0, 6, 2 } ),
	new SingleColourLookup( new byte[]{3, 0, 3 }, new byte[]{ 0, 7, 1 } ),
	new SingleColourLookup( new byte[]{3, 0, 4 }, new byte[]{ 0, 7, 0 } ),
	new SingleColourLookup( new byte[]{4, 0, 4 }, new byte[]{ 0, 7, 1 } ),
	new SingleColourLookup( new byte[]{4, 0, 3 }, new byte[]{ 0, 7, 2 } ),
	new SingleColourLookup( new byte[]{4, 0, 2 }, new byte[]{ 1, 7, 1 } ),
	new SingleColourLookup( new byte[]{4, 0, 1 }, new byte[]{ 1, 7, 0 } ),
	new SingleColourLookup( new byte[]{4, 0, 0 }, new byte[]{ 0, 8, 0 } ),
	new SingleColourLookup( new byte[]{4, 0, 1 }, new byte[]{ 0, 8, 1 } ),
	new SingleColourLookup( new byte[]{4, 0, 2 }, new byte[]{ 2, 7, 1 } ),
	new SingleColourLookup( new byte[]{4, 0, 3 }, new byte[]{ 2, 7, 0 } ),
	new SingleColourLookup( new byte[]{4, 0, 4 }, new byte[]{ 0, 9, 0 } ),
	new SingleColourLookup( new byte[]{5, 0, 3 }, new byte[]{ 0, 9, 1 } ),
	new SingleColourLookup( new byte[]{5, 0, 2 }, new byte[]{ 3, 7, 1 } ),
	new SingleColourLookup( new byte[]{5, 0, 1 }, new byte[]{ 3, 7, 0 } ),
	new SingleColourLookup( new byte[]{5, 0, 0 }, new byte[]{ 0, 10, 0 } ),
	new SingleColourLookup( new byte[]{5, 0, 1 }, new byte[]{ 0, 10, 1 } ),
	new SingleColourLookup( new byte[]{5, 0, 2 }, new byte[]{ 0, 10, 2 } ),
	new SingleColourLookup( new byte[]{5, 0, 3 }, new byte[]{ 0, 11, 1 } ),
	new SingleColourLookup( new byte[]{5, 0, 4 }, new byte[]{ 0, 11, 0 } ),
	new SingleColourLookup( new byte[]{6, 0, 3 }, new byte[]{ 0, 11, 1 } ),
	new SingleColourLookup( new byte[]{6, 0, 2 }, new byte[]{ 0, 11, 2 } ),
	new SingleColourLookup( new byte[]{6, 0, 1 }, new byte[]{ 0, 12, 1 } ),
	new SingleColourLookup( new byte[]{6, 0, 0 }, new byte[]{ 0, 12, 0 } ),
	new SingleColourLookup( new byte[]{6, 0, 1 }, new byte[]{ 0, 12, 1 } ),
	new SingleColourLookup( new byte[]{6, 0, 2 }, new byte[]{ 0, 12, 2 } ),
	new SingleColourLookup( new byte[]{6, 0, 3 }, new byte[]{ 0, 13, 1 } ),
	new SingleColourLookup( new byte[]{6, 0, 4 }, new byte[]{ 0, 13, 0 } ),
	new SingleColourLookup( new byte[]{7, 0, 3 }, new byte[]{ 0, 13, 1 } ),
	new SingleColourLookup( new byte[]{7, 0, 2 }, new byte[]{ 0, 13, 2 } ),
	new SingleColourLookup( new byte[]{7, 0, 1 }, new byte[]{ 0, 14, 1 } ),
	new SingleColourLookup( new byte[]{7, 0, 0 }, new byte[]{ 0, 14, 0 } ),
	new SingleColourLookup( new byte[]{7, 0, 1 }, new byte[]{ 0, 14, 1 } ),
	new SingleColourLookup( new byte[]{7, 0, 2 }, new byte[]{ 0, 14, 2 } ),
	new SingleColourLookup( new byte[]{7, 0, 3 }, new byte[]{ 0, 15, 1 } ),
	new SingleColourLookup( new byte[]{7, 0, 4 }, new byte[]{ 0, 15, 0 } ),
	new SingleColourLookup( new byte[]{8, 0, 4 }, new byte[]{ 0, 15, 1 } ),
	new SingleColourLookup( new byte[]{8, 0, 3 }, new byte[]{ 0, 15, 2 } ),
	new SingleColourLookup( new byte[]{8, 0, 2 }, new byte[]{ 1, 15, 1 } ),
	new SingleColourLookup( new byte[]{8, 0, 1 }, new byte[]{ 1, 15, 0 } ),
	new SingleColourLookup( new byte[]{8, 0, 0 }, new byte[]{ 0, 16, 0 } ),
	new SingleColourLookup( new byte[]{8, 0, 1 }, new byte[]{ 0, 16, 1 } ),
	new SingleColourLookup( new byte[]{8, 0, 2 }, new byte[]{ 2, 15, 1 } ),
	new SingleColourLookup( new byte[]{8, 0, 3 }, new byte[]{ 2, 15, 0 } ),
	new SingleColourLookup( new byte[]{8, 0, 4 }, new byte[]{ 0, 17, 0 } ),
	new SingleColourLookup( new byte[]{9, 0, 3 }, new byte[]{ 0, 17, 1 } ),
	new SingleColourLookup( new byte[]{9, 0, 2 }, new byte[]{ 3, 15, 1 } ),
	new SingleColourLookup( new byte[]{9, 0, 1 }, new byte[]{ 3, 15, 0 } ),
	new SingleColourLookup( new byte[]{9, 0, 0 }, new byte[]{ 0, 18, 0 } ),
	new SingleColourLookup( new byte[]{9, 0, 1 }, new byte[]{ 0, 18, 1 } ),
	new SingleColourLookup( new byte[]{9, 0, 2 }, new byte[]{ 0, 18, 2 } ),
	new SingleColourLookup( new byte[]{9, 0, 3 }, new byte[]{ 0, 19, 1 } ),
	new SingleColourLookup( new byte[]{9, 0, 4 }, new byte[]{ 0, 19, 0 } ),
	new SingleColourLookup( new byte[]{10, 0, 3 }, new byte[]{ 0, 19, 1 } ),
	new SingleColourLookup( new byte[]{10, 0, 2 }, new byte[]{ 0, 19, 2 } ),
	new SingleColourLookup( new byte[]{10, 0, 1 }, new byte[]{ 0, 20, 1 } ),
	new SingleColourLookup( new byte[]{10, 0, 0 }, new byte[]{ 0, 20, 0 } ),
	new SingleColourLookup( new byte[]{10, 0, 1 }, new byte[]{ 0, 20, 1 } ),
	new SingleColourLookup( new byte[]{10, 0, 2 }, new byte[]{ 0, 20, 2 } ),
	new SingleColourLookup( new byte[]{10, 0, 3 }, new byte[]{ 0, 21, 1 } ),
	new SingleColourLookup( new byte[]{10, 0, 4 }, new byte[]{ 0, 21, 0 } ),
	new SingleColourLookup( new byte[]{11, 0, 3 }, new byte[]{ 0, 21, 1 } ),
	new SingleColourLookup( new byte[]{11, 0, 2 }, new byte[]{ 0, 21, 2 } ),
	new SingleColourLookup( new byte[]{11, 0, 1 }, new byte[]{ 0, 22, 1 } ),
	new SingleColourLookup( new byte[]{11, 0, 0 }, new byte[]{ 0, 22, 0 } ),
	new SingleColourLookup( new byte[]{11, 0, 1 }, new byte[]{ 0, 22, 1 } ),
	new SingleColourLookup( new byte[]{11, 0, 2 }, new byte[]{ 0, 22, 2 } ),
	new SingleColourLookup( new byte[]{11, 0, 3 }, new byte[]{ 0, 23, 1 } ),
	new SingleColourLookup( new byte[]{11, 0, 4 }, new byte[]{ 0, 23, 0 } ),
	new SingleColourLookup( new byte[]{12, 0, 4 }, new byte[]{ 0, 23, 1 } ),
	new SingleColourLookup( new byte[]{12, 0, 3 }, new byte[]{ 0, 23, 2 } ),
	new SingleColourLookup( new byte[]{12, 0, 2 }, new byte[]{ 1, 23, 1 } ),
	new SingleColourLookup( new byte[]{12, 0, 1 }, new byte[]{ 1, 23, 0 } ),
	new SingleColourLookup( new byte[]{12, 0, 0 }, new byte[]{ 0, 24, 0 } ),
	new SingleColourLookup( new byte[]{12, 0, 1 }, new byte[]{ 0, 24, 1 } ),
	new SingleColourLookup( new byte[]{12, 0, 2 }, new byte[]{ 2, 23, 1 } ),
	new SingleColourLookup( new byte[]{12, 0, 3 }, new byte[]{ 2, 23, 0 } ),
	new SingleColourLookup( new byte[]{12, 0, 4 }, new byte[]{ 0, 25, 0 } ),
	new SingleColourLookup( new byte[]{13, 0, 3 }, new byte[]{ 0, 25, 1 } ),
	new SingleColourLookup( new byte[]{13, 0, 2 }, new byte[]{ 3, 23, 1 } ),
	new SingleColourLookup( new byte[]{13, 0, 1 }, new byte[]{ 3, 23, 0 } ),
	new SingleColourLookup( new byte[]{13, 0, 0 }, new byte[]{ 0, 26, 0 } ),
	new SingleColourLookup( new byte[]{13, 0, 1 }, new byte[]{ 0, 26, 1 } ),
	new SingleColourLookup( new byte[]{13, 0, 2 }, new byte[]{ 0, 26, 2 } ),
	new SingleColourLookup( new byte[]{13, 0, 3 }, new byte[]{ 0, 27, 1 } ),
	new SingleColourLookup( new byte[]{13, 0, 4 }, new byte[]{ 0, 27, 0 } ),
	new SingleColourLookup( new byte[]{14, 0, 3 }, new byte[]{ 0, 27, 1 } ),
	new SingleColourLookup( new byte[]{14, 0, 2 }, new byte[]{ 0, 27, 2 } ),
	new SingleColourLookup( new byte[]{14, 0, 1 }, new byte[]{ 0, 28, 1 } ),
	new SingleColourLookup( new byte[]{14, 0, 0 }, new byte[]{ 0, 28, 0 } ),
	new SingleColourLookup( new byte[]{14, 0, 1 }, new byte[]{ 0, 28, 1 } ),
	new SingleColourLookup( new byte[]{14, 0, 2 }, new byte[]{ 0, 28, 2 } ),
	new SingleColourLookup( new byte[]{14, 0, 3 }, new byte[]{ 0, 29, 1 } ),
	new SingleColourLookup( new byte[]{14, 0, 4 }, new byte[]{ 0, 29, 0 } ),
	new SingleColourLookup( new byte[]{15, 0, 3 }, new byte[]{ 0, 29, 1 } ),
	new SingleColourLookup( new byte[]{15, 0, 2 }, new byte[]{ 0, 29, 2 } ),
	new SingleColourLookup( new byte[]{15, 0, 1 }, new byte[]{ 0, 30, 1 } ),
	new SingleColourLookup( new byte[]{15, 0, 0 }, new byte[]{ 0, 30, 0 } ),
	new SingleColourLookup( new byte[]{15, 0, 1 }, new byte[]{ 0, 30, 1 } ),
	new SingleColourLookup( new byte[]{15, 0, 2 }, new byte[]{ 0, 30, 2 } ),
	new SingleColourLookup( new byte[]{15, 0, 3 }, new byte[]{ 0, 31, 1 } ),
	new SingleColourLookup( new byte[]{15, 0, 4 }, new byte[]{ 0, 31, 0 } ),
	new SingleColourLookup( new byte[]{16, 0, 4 }, new byte[]{ 0, 31, 1 } ),
	new SingleColourLookup( new byte[]{16, 0, 3 }, new byte[]{ 0, 31, 2 } ),
	new SingleColourLookup( new byte[]{16, 0, 2 }, new byte[]{ 1, 31, 1 } ),
	new SingleColourLookup( new byte[]{16, 0, 1 }, new byte[]{ 1, 31, 0 } ),
	new SingleColourLookup( new byte[]{16, 0, 0 }, new byte[]{ 4, 28, 0 } ),
	new SingleColourLookup( new byte[]{16, 0, 1 }, new byte[]{ 4, 28, 1 } ),
	new SingleColourLookup( new byte[]{16, 0, 2 }, new byte[]{ 2, 31, 1 } ),
	new SingleColourLookup( new byte[]{16, 0, 3 }, new byte[]{ 2, 31, 0 } ),
	new SingleColourLookup( new byte[]{16, 0, 4 }, new byte[]{ 4, 29, 0 } ),
	new SingleColourLookup( new byte[]{17, 0, 3 }, new byte[]{ 4, 29, 1 } ),
	new SingleColourLookup( new byte[]{17, 0, 2 }, new byte[]{ 3, 31, 1 } ),
	new SingleColourLookup( new byte[]{17, 0, 1 }, new byte[]{ 3, 31, 0 } ),
	new SingleColourLookup( new byte[]{17, 0, 0 }, new byte[]{ 4, 30, 0 } ),
	new SingleColourLookup( new byte[]{17, 0, 1 }, new byte[]{ 4, 30, 1 } ),
	new SingleColourLookup( new byte[]{17, 0, 2 }, new byte[]{ 4, 30, 2 } ),
	new SingleColourLookup( new byte[]{17, 0, 3 }, new byte[]{ 4, 31, 1 } ),
	new SingleColourLookup( new byte[]{17, 0, 4 }, new byte[]{ 4, 31, 0 } ),
	new SingleColourLookup( new byte[]{18, 0, 3 }, new byte[]{ 4, 31, 1 } ),
	new SingleColourLookup( new byte[]{18, 0, 2 }, new byte[]{ 4, 31, 2 } ),
	new SingleColourLookup( new byte[]{18, 0, 1 }, new byte[]{ 5, 31, 1 } ),
	new SingleColourLookup( new byte[]{18, 0, 0 }, new byte[]{ 5, 31, 0 } ),
	new SingleColourLookup( new byte[]{18, 0, 1 }, new byte[]{ 5, 31, 1 } ),
	new SingleColourLookup( new byte[]{18, 0, 2 }, new byte[]{ 5, 31, 2 } ),
	new SingleColourLookup( new byte[]{18, 0, 3 }, new byte[]{ 6, 31, 1 } ),
	new SingleColourLookup( new byte[]{18, 0, 4 }, new byte[]{ 6, 31, 0 } ),
	new SingleColourLookup( new byte[]{19, 0, 3 }, new byte[]{ 6, 31, 1 } ),
	new SingleColourLookup( new byte[]{19, 0, 2 }, new byte[]{ 6, 31, 2 } ),
	new SingleColourLookup( new byte[]{19, 0, 1 }, new byte[]{ 7, 31, 1 } ),
	new SingleColourLookup( new byte[]{19, 0, 0 }, new byte[]{ 7, 31, 0 } ),
	new SingleColourLookup( new byte[]{19, 0, 1 }, new byte[]{ 7, 31, 1 } ),
	new SingleColourLookup( new byte[]{19, 0, 2 }, new byte[]{ 7, 31, 2 } ),
	new SingleColourLookup( new byte[]{19, 0, 3 }, new byte[]{ 8, 31, 1 } ),
	new SingleColourLookup( new byte[]{19, 0, 4 }, new byte[]{ 8, 31, 0 } ),
	new SingleColourLookup( new byte[]{20, 0, 4 }, new byte[]{ 8, 31, 1 } ),
	new SingleColourLookup( new byte[]{20, 0, 3 }, new byte[]{ 8, 31, 2 } ),
	new SingleColourLookup( new byte[]{20, 0, 2 }, new byte[]{ 9, 31, 1 } ),
	new SingleColourLookup( new byte[]{20, 0, 1 }, new byte[]{ 9, 31, 0 } ),
	new SingleColourLookup( new byte[]{20, 0, 0 }, new byte[]{ 12, 28, 0 } ),
	new SingleColourLookup( new byte[]{20, 0, 1 }, new byte[]{ 12, 28, 1 } ),
	new SingleColourLookup( new byte[]{20, 0, 2 }, new byte[]{ 10, 31, 1 } ),
	new SingleColourLookup( new byte[]{20, 0, 3 }, new byte[]{ 10, 31, 0 } ),
	new SingleColourLookup( new byte[]{20, 0, 4 }, new byte[]{ 12, 29, 0 } ),
	new SingleColourLookup( new byte[]{21, 0, 3 }, new byte[]{ 12, 29, 1 } ),
	new SingleColourLookup( new byte[]{21, 0, 2 }, new byte[]{ 11, 31, 1 } ),
	new SingleColourLookup( new byte[]{21, 0, 1 }, new byte[]{ 11, 31, 0 } ),
	new SingleColourLookup( new byte[]{21, 0, 0 }, new byte[]{ 12, 30, 0 } ),
	new SingleColourLookup( new byte[]{21, 0, 1 }, new byte[]{ 12, 30, 1 } ),
	new SingleColourLookup( new byte[]{21, 0, 2 }, new byte[]{ 12, 30, 2 } ),
	new SingleColourLookup( new byte[]{21, 0, 3 }, new byte[]{ 12, 31, 1 } ),
	new SingleColourLookup( new byte[]{21, 0, 4 }, new byte[]{ 12, 31, 0 } ),
	new SingleColourLookup( new byte[]{22, 0, 3 }, new byte[]{ 12, 31, 1 } ),
	new SingleColourLookup( new byte[]{22, 0, 2 }, new byte[]{ 12, 31, 2 } ),
	new SingleColourLookup( new byte[]{22, 0, 1 }, new byte[]{ 13, 31, 1 } ),
	new SingleColourLookup( new byte[]{22, 0, 0 }, new byte[]{ 13, 31, 0 } ),
	new SingleColourLookup( new byte[]{22, 0, 1 }, new byte[]{ 13, 31, 1 } ),
	new SingleColourLookup( new byte[]{22, 0, 2 }, new byte[]{ 13, 31, 2 } ),
	new SingleColourLookup( new byte[]{22, 0, 3 }, new byte[]{ 14, 31, 1 } ),
	new SingleColourLookup( new byte[]{22, 0, 4 }, new byte[]{ 14, 31, 0 } ),
	new SingleColourLookup( new byte[]{23, 0, 3 }, new byte[]{ 14, 31, 1 } ),
	new SingleColourLookup( new byte[]{23, 0, 2 }, new byte[]{ 14, 31, 2 } ),
	new SingleColourLookup( new byte[]{23, 0, 1 }, new byte[]{ 15, 31, 1 } ),
	new SingleColourLookup( new byte[]{23, 0, 0 }, new byte[]{ 15, 31, 0 } ),
	new SingleColourLookup( new byte[]{23, 0, 1 }, new byte[]{ 15, 31, 1 } ),
	new SingleColourLookup( new byte[]{23, 0, 2 }, new byte[]{ 15, 31, 2 } ),
	new SingleColourLookup( new byte[]{23, 0, 3 }, new byte[]{ 16, 31, 1 } ),
	new SingleColourLookup( new byte[]{23, 0, 4 }, new byte[]{ 16, 31, 0 } ),
	new SingleColourLookup( new byte[]{24, 0, 4 }, new byte[]{ 16, 31, 1 } ),
	new SingleColourLookup( new byte[]{24, 0, 3 }, new byte[]{ 16, 31, 2 } ),
	new SingleColourLookup( new byte[]{24, 0, 2 }, new byte[]{ 17, 31, 1 } ),
	new SingleColourLookup( new byte[]{24, 0, 1 }, new byte[]{ 17, 31, 0 } ),
	new SingleColourLookup( new byte[]{24, 0, 0 }, new byte[]{ 20, 28, 0 } ),
	new SingleColourLookup( new byte[]{24, 0, 1 }, new byte[]{ 20, 28, 1 } ),
	new SingleColourLookup( new byte[]{24, 0, 2 }, new byte[]{ 18, 31, 1 } ),
	new SingleColourLookup( new byte[]{24, 0, 3 }, new byte[]{ 18, 31, 0 } ),
	new SingleColourLookup( new byte[]{24, 0, 4 }, new byte[]{ 20, 29, 0 } ),
	new SingleColourLookup( new byte[]{25, 0, 3 }, new byte[]{ 20, 29, 1 } ),
	new SingleColourLookup( new byte[]{25, 0, 2 }, new byte[]{ 19, 31, 1 } ),
	new SingleColourLookup( new byte[]{25, 0, 1 }, new byte[]{ 19, 31, 0 } ),
	new SingleColourLookup( new byte[]{25, 0, 0 }, new byte[]{ 20, 30, 0 } ),
	new SingleColourLookup( new byte[]{25, 0, 1 }, new byte[]{ 20, 30, 1 } ),
	new SingleColourLookup( new byte[]{25, 0, 2 }, new byte[]{ 20, 30, 2 } ),
	new SingleColourLookup( new byte[]{25, 0, 3 }, new byte[]{ 20, 31, 1 } ),
	new SingleColourLookup( new byte[]{25, 0, 4 }, new byte[]{ 20, 31, 0 } ),
	new SingleColourLookup( new byte[]{26, 0, 3 }, new byte[]{ 20, 31, 1 } ),
	new SingleColourLookup( new byte[]{26, 0, 2 }, new byte[]{ 20, 31, 2 } ),
	new SingleColourLookup( new byte[]{26, 0, 1 }, new byte[]{ 21, 31, 1 } ),
	new SingleColourLookup( new byte[]{26, 0, 0 }, new byte[]{ 21, 31, 0 } ),
	new SingleColourLookup( new byte[]{26, 0, 1 }, new byte[]{ 21, 31, 1 } ),
	new SingleColourLookup( new byte[]{26, 0, 2 }, new byte[]{ 21, 31, 2 } ),
	new SingleColourLookup( new byte[]{26, 0, 3 }, new byte[]{ 22, 31, 1 } ),
	new SingleColourLookup( new byte[]{26, 0, 4 }, new byte[]{ 22, 31, 0 } ),
	new SingleColourLookup( new byte[]{27, 0, 3 }, new byte[]{ 22, 31, 1 } ),
	new SingleColourLookup( new byte[]{27, 0, 2 }, new byte[]{ 22, 31, 2 } ),
	new SingleColourLookup( new byte[]{27, 0, 1 }, new byte[]{ 23, 31, 1 } ),
	new SingleColourLookup( new byte[]{27, 0, 0 }, new byte[]{ 23, 31, 0 } ),
	new SingleColourLookup( new byte[]{27, 0, 1 }, new byte[]{ 23, 31, 1 } ),
	new SingleColourLookup( new byte[]{27, 0, 2 }, new byte[]{ 23, 31, 2 } ),
	new SingleColourLookup( new byte[]{27, 0, 3 }, new byte[]{ 24, 31, 1 } ),
	new SingleColourLookup( new byte[]{27, 0, 4 }, new byte[]{ 24, 31, 0 } ),
	new SingleColourLookup( new byte[]{28, 0, 4 }, new byte[]{ 24, 31, 1 } ),
	new SingleColourLookup( new byte[]{28, 0, 3 }, new byte[]{ 24, 31, 2 } ),
	new SingleColourLookup( new byte[]{28, 0, 2 }, new byte[]{ 25, 31, 1 } ),
	new SingleColourLookup( new byte[]{28, 0, 1 }, new byte[]{ 25, 31, 0 } ),
	new SingleColourLookup( new byte[]{28, 0, 0 }, new byte[]{ 28, 28, 0 } ),
	new SingleColourLookup( new byte[]{28, 0, 1 }, new byte[]{ 28, 28, 1 } ),
	new SingleColourLookup( new byte[]{28, 0, 2 }, new byte[]{ 26, 31, 1 } ),
	new SingleColourLookup( new byte[]{28, 0, 3 }, new byte[]{ 26, 31, 0 } ),
	new SingleColourLookup( new byte[]{28, 0, 4 }, new byte[]{ 28, 29, 0 } ),
	new SingleColourLookup( new byte[]{29, 0, 3 }, new byte[]{ 28, 29, 1 } ),
	new SingleColourLookup( new byte[]{29, 0, 2 }, new byte[]{ 27, 31, 1 } ),
	new SingleColourLookup( new byte[]{29, 0, 1 }, new byte[]{ 27, 31, 0 } ),
	new SingleColourLookup( new byte[]{29, 0, 0 }, new byte[]{ 28, 30, 0 } ),
	new SingleColourLookup( new byte[]{29, 0, 1 }, new byte[]{ 28, 30, 1 } ),
	new SingleColourLookup( new byte[]{29, 0, 2 }, new byte[]{ 28, 30, 2 } ),
	new SingleColourLookup( new byte[]{29, 0, 3 }, new byte[]{ 28, 31, 1 } ),
	new SingleColourLookup( new byte[]{29, 0, 4 }, new byte[]{ 28, 31, 0 } ),
	new SingleColourLookup( new byte[]{30, 0, 3 }, new byte[]{ 28, 31, 1 } ),
	new SingleColourLookup( new byte[]{30, 0, 2 }, new byte[]{ 28, 31, 2 } ),
	new SingleColourLookup( new byte[]{30, 0, 1 }, new byte[]{ 29, 31, 1 } ),
	new SingleColourLookup( new byte[]{30, 0, 0 }, new byte[]{ 29, 31, 0 } ),
	new SingleColourLookup( new byte[]{30, 0, 1 }, new byte[]{ 29, 31, 1 } ),
	new SingleColourLookup( new byte[]{30, 0, 2 }, new byte[]{ 29, 31, 2 } ),
	new SingleColourLookup( new byte[]{30, 0, 3 }, new byte[]{ 30, 31, 1 } ),
	new SingleColourLookup( new byte[]{30, 0, 4 }, new byte[]{ 30, 31, 0 } ),
	new SingleColourLookup( new byte[]{31, 0, 3 }, new byte[]{ 30, 31, 1 } ),
	new SingleColourLookup( new byte[]{31, 0, 2 }, new byte[]{ 30, 31, 2 } ),
	new SingleColourLookup( new byte[]{31, 0, 1 }, new byte[]{ 31, 31, 1 } ),
	new SingleColourLookup( new byte[]{31, 0, 0 }, new byte[]{ 31, 31, 0 } ) 
};

static SingleColourLookup[] lookup_6_3 = 
{
	new SingleColourLookup( new byte[]{0, 0, 0 }, new byte[]{ 0, 0, 0 } ),
	new SingleColourLookup( new byte[]{0, 0, 1 }, new byte[]{ 0, 1, 1 } ),
	new SingleColourLookup( new byte[]{0, 0, 2 }, new byte[]{ 0, 1, 0 } ),
	new SingleColourLookup( new byte[]{1, 0, 1 }, new byte[]{ 0, 2, 1 } ),
	new SingleColourLookup( new byte[]{1, 0, 0 }, new byte[]{ 0, 2, 0 } ),
	new SingleColourLookup( new byte[]{1, 0, 1 }, new byte[]{ 0, 3, 1 } ),
	new SingleColourLookup( new byte[]{1, 0, 2 }, new byte[]{ 0, 3, 0 } ),
	new SingleColourLookup( new byte[]{2, 0, 1 }, new byte[]{ 0, 4, 1 } ),
	new SingleColourLookup( new byte[]{2, 0, 0 }, new byte[]{ 0, 4, 0 } ),
	new SingleColourLookup( new byte[]{2, 0, 1 }, new byte[]{ 0, 5, 1 } ),
	new SingleColourLookup( new byte[]{2, 0, 2 }, new byte[]{ 0, 5, 0 } ),
	new SingleColourLookup( new byte[]{3, 0, 1 }, new byte[]{ 0, 6, 1 } ),
	new SingleColourLookup( new byte[]{3, 0, 0 }, new byte[]{ 0, 6, 0 } ),
	new SingleColourLookup( new byte[]{3, 0, 1 }, new byte[]{ 0, 7, 1 } ),
	new SingleColourLookup( new byte[]{3, 0, 2 }, new byte[]{ 0, 7, 0 } ),
	new SingleColourLookup( new byte[]{4, 0, 1 }, new byte[]{ 0, 8, 1 } ),
	new SingleColourLookup( new byte[]{4, 0, 0 }, new byte[]{ 0, 8, 0 } ),
	new SingleColourLookup( new byte[]{4, 0, 1 }, new byte[]{ 0, 9, 1 } ),
	new SingleColourLookup( new byte[]{4, 0, 2 }, new byte[]{ 0, 9, 0 } ),
	new SingleColourLookup( new byte[]{5, 0, 1 }, new byte[]{ 0, 10, 1 } ),
	new SingleColourLookup( new byte[]{5, 0, 0 }, new byte[]{ 0, 10, 0 } ),
	new SingleColourLookup( new byte[]{5, 0, 1 }, new byte[]{ 0, 11, 1 } ),
	new SingleColourLookup( new byte[]{5, 0, 2 }, new byte[]{ 0, 11, 0 } ),
	new SingleColourLookup( new byte[]{6, 0, 1 }, new byte[]{ 0, 12, 1 } ),
	new SingleColourLookup( new byte[]{6, 0, 0 }, new byte[]{ 0, 12, 0 } ),
	new SingleColourLookup( new byte[]{6, 0, 1 }, new byte[]{ 0, 13, 1 } ),
	new SingleColourLookup( new byte[]{6, 0, 2 }, new byte[]{ 0, 13, 0 } ),
	new SingleColourLookup( new byte[]{7, 0, 1 }, new byte[]{ 0, 14, 1 } ),
	new SingleColourLookup( new byte[]{7, 0, 0 }, new byte[]{ 0, 14, 0 } ),
	new SingleColourLookup( new byte[]{7, 0, 1 }, new byte[]{ 0, 15, 1 } ),
	new SingleColourLookup( new byte[]{7, 0, 2 }, new byte[]{ 0, 15, 0 } ),
	new SingleColourLookup( new byte[]{8, 0, 1 }, new byte[]{ 0, 16, 1 } ),
	new SingleColourLookup( new byte[]{8, 0, 0 }, new byte[]{ 0, 16, 0 } ),
	new SingleColourLookup( new byte[]{8, 0, 1 }, new byte[]{ 0, 17, 1 } ),
	new SingleColourLookup( new byte[]{8, 0, 2 }, new byte[]{ 0, 17, 0 } ),
	new SingleColourLookup( new byte[]{9, 0, 1 }, new byte[]{ 0, 18, 1 } ),
	new SingleColourLookup( new byte[]{9, 0, 0 }, new byte[]{ 0, 18, 0 } ),
	new SingleColourLookup( new byte[]{9, 0, 1 }, new byte[]{ 0, 19, 1 } ),
	new SingleColourLookup( new byte[]{9, 0, 2 }, new byte[]{ 0, 19, 0 } ),
	new SingleColourLookup( new byte[]{10, 0, 1 }, new byte[]{ 0, 20, 1 } ),
	new SingleColourLookup( new byte[]{10, 0, 0 }, new byte[]{ 0, 20, 0 } ),
	new SingleColourLookup( new byte[]{10, 0, 1 }, new byte[]{ 0, 21, 1 } ),
	new SingleColourLookup( new byte[]{10, 0, 2 }, new byte[]{ 0, 21, 0 } ),
	new SingleColourLookup( new byte[]{11, 0, 1 }, new byte[]{ 0, 22, 1 } ),
	new SingleColourLookup( new byte[]{11, 0, 0 }, new byte[]{ 0, 22, 0 } ),
	new SingleColourLookup( new byte[]{11, 0, 1 }, new byte[]{ 0, 23, 1 } ),
	new SingleColourLookup( new byte[]{11, 0, 2 }, new byte[]{ 0, 23, 0 } ),
	new SingleColourLookup( new byte[]{12, 0, 1 }, new byte[]{ 0, 24, 1 } ),
	new SingleColourLookup( new byte[]{12, 0, 0 }, new byte[]{ 0, 24, 0 } ),
	new SingleColourLookup( new byte[]{12, 0, 1 }, new byte[]{ 0, 25, 1 } ),
	new SingleColourLookup( new byte[]{12, 0, 2 }, new byte[]{ 0, 25, 0 } ),
	new SingleColourLookup( new byte[]{13, 0, 1 }, new byte[]{ 0, 26, 1 } ),
	new SingleColourLookup( new byte[]{13, 0, 0 }, new byte[]{ 0, 26, 0 } ),
	new SingleColourLookup( new byte[]{13, 0, 1 }, new byte[]{ 0, 27, 1 } ),
	new SingleColourLookup( new byte[]{13, 0, 2 }, new byte[]{ 0, 27, 0 } ),
	new SingleColourLookup( new byte[]{14, 0, 1 }, new byte[]{ 0, 28, 1 } ),
	new SingleColourLookup( new byte[]{14, 0, 0 }, new byte[]{ 0, 28, 0 } ),
	new SingleColourLookup( new byte[]{14, 0, 1 }, new byte[]{ 0, 29, 1 } ),
	new SingleColourLookup( new byte[]{14, 0, 2 }, new byte[]{ 0, 29, 0 } ),
	new SingleColourLookup( new byte[]{15, 0, 1 }, new byte[]{ 0, 30, 1 } ),
	new SingleColourLookup( new byte[]{15, 0, 0 }, new byte[]{ 0, 30, 0 } ),
	new SingleColourLookup( new byte[]{15, 0, 1 }, new byte[]{ 0, 31, 1 } ),
	new SingleColourLookup( new byte[]{15, 0, 2 }, new byte[]{ 0, 31, 0 } ),
	new SingleColourLookup( new byte[]{16, 0, 2 }, new byte[]{ 1, 31, 1 } ),
	new SingleColourLookup( new byte[]{16, 0, 1 }, new byte[]{ 1, 31, 0 } ),
	new SingleColourLookup( new byte[]{16, 0, 0 }, new byte[]{ 0, 32, 0 } ),
	new SingleColourLookup( new byte[]{16, 0, 1 }, new byte[]{ 2, 31, 0 } ),
	new SingleColourLookup( new byte[]{16, 0, 2 }, new byte[]{ 0, 33, 0 } ),
	new SingleColourLookup( new byte[]{17, 0, 1 }, new byte[]{ 3, 31, 0 } ),
	new SingleColourLookup( new byte[]{17, 0, 0 }, new byte[]{ 0, 34, 0 } ),
	new SingleColourLookup( new byte[]{17, 0, 1 }, new byte[]{ 4, 31, 0 } ),
	new SingleColourLookup( new byte[]{17, 0, 2 }, new byte[]{ 0, 35, 0 } ),
	new SingleColourLookup( new byte[]{18, 0, 1 }, new byte[]{ 5, 31, 0 } ),
	new SingleColourLookup( new byte[]{18, 0, 0 }, new byte[]{ 0, 36, 0 } ),
	new SingleColourLookup( new byte[]{18, 0, 1 }, new byte[]{ 6, 31, 0 } ),
	new SingleColourLookup( new byte[]{18, 0, 2 }, new byte[]{ 0, 37, 0 } ),
	new SingleColourLookup( new byte[]{19, 0, 1 }, new byte[]{ 7, 31, 0 } ),
	new SingleColourLookup( new byte[]{19, 0, 0 }, new byte[]{ 0, 38, 0 } ),
	new SingleColourLookup( new byte[]{19, 0, 1 }, new byte[]{ 8, 31, 0 } ),
	new SingleColourLookup( new byte[]{19, 0, 2 }, new byte[]{ 0, 39, 0 } ),
	new SingleColourLookup( new byte[]{20, 0, 1 }, new byte[]{ 9, 31, 0 } ),
	new SingleColourLookup( new byte[]{20, 0, 0 }, new byte[]{ 0, 40, 0 } ),
	new SingleColourLookup( new byte[]{20, 0, 1 }, new byte[]{ 10, 31, 0 } ),
	new SingleColourLookup( new byte[]{20, 0, 2 }, new byte[]{ 0, 41, 0 } ),
	new SingleColourLookup( new byte[]{21, 0, 1 }, new byte[]{ 11, 31, 0 } ),
	new SingleColourLookup( new byte[]{21, 0, 0 }, new byte[]{ 0, 42, 0 } ),
	new SingleColourLookup( new byte[]{21, 0, 1 }, new byte[]{ 12, 31, 0 } ),
	new SingleColourLookup( new byte[]{21, 0, 2 }, new byte[]{ 0, 43, 0 } ),
	new SingleColourLookup( new byte[]{22, 0, 1 }, new byte[]{ 13, 31, 0 } ),
	new SingleColourLookup( new byte[]{22, 0, 0 }, new byte[]{ 0, 44, 0 } ),
	new SingleColourLookup( new byte[]{22, 0, 1 }, new byte[]{ 14, 31, 0 } ),
	new SingleColourLookup( new byte[]{22, 0, 2 }, new byte[]{ 0, 45, 0 } ),
	new SingleColourLookup( new byte[]{23, 0, 1 }, new byte[]{ 15, 31, 0 } ),
	new SingleColourLookup( new byte[]{23, 0, 0 }, new byte[]{ 0, 46, 0 } ),
	new SingleColourLookup( new byte[]{23, 0, 1 }, new byte[]{ 0, 47, 1 } ),
	new SingleColourLookup( new byte[]{23, 0, 2 }, new byte[]{ 0, 47, 0 } ),
	new SingleColourLookup( new byte[]{24, 0, 1 }, new byte[]{ 0, 48, 1 } ),
	new SingleColourLookup( new byte[]{24, 0, 0 }, new byte[]{ 0, 48, 0 } ),
	new SingleColourLookup( new byte[]{24, 0, 1 }, new byte[]{ 0, 49, 1 } ),
	new SingleColourLookup( new byte[]{24, 0, 2 }, new byte[]{ 0, 49, 0 } ),
	new SingleColourLookup( new byte[]{25, 0, 1 }, new byte[]{ 0, 50, 1 } ),
	new SingleColourLookup( new byte[]{25, 0, 0 }, new byte[]{ 0, 50, 0 } ),
	new SingleColourLookup( new byte[]{25, 0, 1 }, new byte[]{ 0, 51, 1 } ),
	new SingleColourLookup( new byte[]{25, 0, 2 }, new byte[]{ 0, 51, 0 } ),
	new SingleColourLookup( new byte[]{26, 0, 1 }, new byte[]{ 0, 52, 1 } ),
	new SingleColourLookup( new byte[]{26, 0, 0 }, new byte[]{ 0, 52, 0 } ),
	new SingleColourLookup( new byte[]{26, 0, 1 }, new byte[]{ 0, 53, 1 } ),
	new SingleColourLookup( new byte[]{26, 0, 2 }, new byte[]{ 0, 53, 0 } ),
	new SingleColourLookup( new byte[]{27, 0, 1 }, new byte[]{ 0, 54, 1 } ),
	new SingleColourLookup( new byte[]{27, 0, 0 }, new byte[]{ 0, 54, 0 } ),
	new SingleColourLookup( new byte[]{27, 0, 1 }, new byte[]{ 0, 55, 1 } ),
	new SingleColourLookup( new byte[]{27, 0, 2 }, new byte[]{ 0, 55, 0 } ),
	new SingleColourLookup( new byte[]{28, 0, 1 }, new byte[]{ 0, 56, 1 } ),
	new SingleColourLookup( new byte[]{28, 0, 0 }, new byte[]{ 0, 56, 0 } ),
	new SingleColourLookup( new byte[]{28, 0, 1 }, new byte[]{ 0, 57, 1 } ),
	new SingleColourLookup( new byte[]{28, 0, 2 }, new byte[]{ 0, 57, 0 } ),
	new SingleColourLookup( new byte[]{29, 0, 1 }, new byte[]{ 0, 58, 1 } ),
	new SingleColourLookup( new byte[]{29, 0, 0 }, new byte[]{ 0, 58, 0 } ),
	new SingleColourLookup( new byte[]{29, 0, 1 }, new byte[]{ 0, 59, 1 } ),
	new SingleColourLookup( new byte[]{29, 0, 2 }, new byte[]{ 0, 59, 0 } ),
	new SingleColourLookup( new byte[]{30, 0, 1 }, new byte[]{ 0, 60, 1 } ),
	new SingleColourLookup( new byte[]{30, 0, 0 }, new byte[]{ 0, 60, 0 } ),
	new SingleColourLookup( new byte[]{30, 0, 1 }, new byte[]{ 0, 61, 1 } ),
	new SingleColourLookup( new byte[]{30, 0, 2 }, new byte[]{ 0, 61, 0 } ),
	new SingleColourLookup( new byte[]{31, 0, 1 }, new byte[]{ 0, 62, 1 } ),
	new SingleColourLookup( new byte[]{31, 0, 0 }, new byte[]{ 0, 62, 0 } ),
	new SingleColourLookup( new byte[]{31, 0, 1 }, new byte[]{ 0, 63, 1 } ),
	new SingleColourLookup( new byte[]{31, 0, 2 }, new byte[]{ 0, 63, 0 } ),
	new SingleColourLookup( new byte[]{32, 0, 2 }, new byte[]{ 1, 63, 1 } ),
	new SingleColourLookup( new byte[]{32, 0, 1 }, new byte[]{ 1, 63, 0 } ),
	new SingleColourLookup( new byte[]{32, 0, 0 }, new byte[]{ 16, 48, 0 } ),
	new SingleColourLookup( new byte[]{32, 0, 1 }, new byte[]{ 2, 63, 0 } ),
	new SingleColourLookup( new byte[]{32, 0, 2 }, new byte[]{ 16, 49, 0 } ),
	new SingleColourLookup( new byte[]{33, 0, 1 }, new byte[]{ 3, 63, 0 } ),
	new SingleColourLookup( new byte[]{33, 0, 0 }, new byte[]{ 16, 50, 0 } ),
	new SingleColourLookup( new byte[]{33, 0, 1 }, new byte[]{ 4, 63, 0 } ),
	new SingleColourLookup( new byte[]{33, 0, 2 }, new byte[]{ 16, 51, 0 } ),
	new SingleColourLookup( new byte[]{34, 0, 1 }, new byte[]{ 5, 63, 0 } ),
	new SingleColourLookup( new byte[]{34, 0, 0 }, new byte[]{ 16, 52, 0 } ),
	new SingleColourLookup( new byte[]{34, 0, 1 }, new byte[]{ 6, 63, 0 } ),
	new SingleColourLookup( new byte[]{34, 0, 2 }, new byte[]{ 16, 53, 0 } ),
	new SingleColourLookup( new byte[]{35, 0, 1 }, new byte[]{ 7, 63, 0 } ),
	new SingleColourLookup( new byte[]{35, 0, 0 }, new byte[]{ 16, 54, 0 } ),
	new SingleColourLookup( new byte[]{35, 0, 1 }, new byte[]{ 8, 63, 0 } ),
	new SingleColourLookup( new byte[]{35, 0, 2 }, new byte[]{ 16, 55, 0 } ),
	new SingleColourLookup( new byte[]{36, 0, 1 }, new byte[]{ 9, 63, 0 } ),
	new SingleColourLookup( new byte[]{36, 0, 0 }, new byte[]{ 16, 56, 0 } ),
	new SingleColourLookup( new byte[]{36, 0, 1 }, new byte[]{ 10, 63, 0 } ),
	new SingleColourLookup( new byte[]{36, 0, 2 }, new byte[]{ 16, 57, 0 } ),
	new SingleColourLookup( new byte[]{37, 0, 1 }, new byte[]{ 11, 63, 0 } ),
	new SingleColourLookup( new byte[]{37, 0, 0 }, new byte[]{ 16, 58, 0 } ),
	new SingleColourLookup( new byte[]{37, 0, 1 }, new byte[]{ 12, 63, 0 } ),
	new SingleColourLookup( new byte[]{37, 0, 2 }, new byte[]{ 16, 59, 0 } ),
	new SingleColourLookup( new byte[]{38, 0, 1 }, new byte[]{ 13, 63, 0 } ),
	new SingleColourLookup( new byte[]{38, 0, 0 }, new byte[]{ 16, 60, 0 } ),
	new SingleColourLookup( new byte[]{38, 0, 1 }, new byte[]{ 14, 63, 0 } ),
	new SingleColourLookup( new byte[]{38, 0, 2 }, new byte[]{ 16, 61, 0 } ),
	new SingleColourLookup( new byte[]{39, 0, 1 }, new byte[]{ 15, 63, 0 } ),
	new SingleColourLookup( new byte[]{39, 0, 0 }, new byte[]{ 16, 62, 0 } ),
	new SingleColourLookup( new byte[]{39, 0, 1 }, new byte[]{ 16, 63, 1 } ),
	new SingleColourLookup( new byte[]{39, 0, 2 }, new byte[]{ 16, 63, 0 } ),
	new SingleColourLookup( new byte[]{40, 0, 1 }, new byte[]{ 17, 63, 1 } ),
	new SingleColourLookup( new byte[]{40, 0, 0 }, new byte[]{ 17, 63, 0 } ),
	new SingleColourLookup( new byte[]{40, 0, 1 }, new byte[]{ 18, 63, 1 } ),
	new SingleColourLookup( new byte[]{40, 0, 2 }, new byte[]{ 18, 63, 0 } ),
	new SingleColourLookup( new byte[]{41, 0, 1 }, new byte[]{ 19, 63, 1 } ),
	new SingleColourLookup( new byte[]{41, 0, 0 }, new byte[]{ 19, 63, 0 } ),
	new SingleColourLookup( new byte[]{41, 0, 1 }, new byte[]{ 20, 63, 1 } ),
	new SingleColourLookup( new byte[]{41, 0, 2 }, new byte[]{ 20, 63, 0 } ),
	new SingleColourLookup( new byte[]{42, 0, 1 }, new byte[]{ 21, 63, 1 } ),
	new SingleColourLookup( new byte[]{42, 0, 0 }, new byte[]{ 21, 63, 0 } ),
	new SingleColourLookup( new byte[]{42, 0, 1 }, new byte[]{ 22, 63, 1 } ),
	new SingleColourLookup( new byte[]{42, 0, 2 }, new byte[]{ 22, 63, 0 } ),
	new SingleColourLookup( new byte[]{43, 0, 1 }, new byte[]{ 23, 63, 1 } ),
	new SingleColourLookup( new byte[]{43, 0, 0 }, new byte[]{ 23, 63, 0 } ),
	new SingleColourLookup( new byte[]{43, 0, 1 }, new byte[]{ 24, 63, 1 } ),
	new SingleColourLookup( new byte[]{43, 0, 2 }, new byte[]{ 24, 63, 0 } ),
	new SingleColourLookup( new byte[]{44, 0, 1 }, new byte[]{ 25, 63, 1 } ),
	new SingleColourLookup( new byte[]{44, 0, 0 }, new byte[]{ 25, 63, 0 } ),
	new SingleColourLookup( new byte[]{44, 0, 1 }, new byte[]{ 26, 63, 1 } ),
	new SingleColourLookup( new byte[]{44, 0, 2 }, new byte[]{ 26, 63, 0 } ),
	new SingleColourLookup( new byte[]{45, 0, 1 }, new byte[]{ 27, 63, 1 } ),
	new SingleColourLookup( new byte[]{45, 0, 0 }, new byte[]{ 27, 63, 0 } ),
	new SingleColourLookup( new byte[]{45, 0, 1 }, new byte[]{ 28, 63, 1 } ),
	new SingleColourLookup( new byte[]{45, 0, 2 }, new byte[]{ 28, 63, 0 } ),
	new SingleColourLookup( new byte[]{46, 0, 1 }, new byte[]{ 29, 63, 1 } ),
	new SingleColourLookup( new byte[]{46, 0, 0 }, new byte[]{ 29, 63, 0 } ),
	new SingleColourLookup( new byte[]{46, 0, 1 }, new byte[]{ 30, 63, 1 } ),
	new SingleColourLookup( new byte[]{46, 0, 2 }, new byte[]{ 30, 63, 0 } ),
	new SingleColourLookup( new byte[]{47, 0, 1 }, new byte[]{ 31, 63, 1 } ),
	new SingleColourLookup( new byte[]{47, 0, 0 }, new byte[]{ 31, 63, 0 } ),
	new SingleColourLookup( new byte[]{47, 0, 1 }, new byte[]{ 32, 63, 1 } ),
	new SingleColourLookup( new byte[]{47, 0, 2 }, new byte[]{ 32, 63, 0 } ),
	new SingleColourLookup( new byte[]{48, 0, 2 }, new byte[]{ 33, 63, 1 } ),
	new SingleColourLookup( new byte[]{48, 0, 1 }, new byte[]{ 33, 63, 0 } ),
	new SingleColourLookup( new byte[]{48, 0, 0 }, new byte[]{ 48, 48, 0 } ),
	new SingleColourLookup( new byte[]{48, 0, 1 }, new byte[]{ 34, 63, 0 } ),
	new SingleColourLookup( new byte[]{48, 0, 2 }, new byte[]{ 48, 49, 0 } ),
	new SingleColourLookup( new byte[]{49, 0, 1 }, new byte[]{ 35, 63, 0 } ),
	new SingleColourLookup( new byte[]{49, 0, 0 }, new byte[]{ 48, 50, 0 } ),
	new SingleColourLookup( new byte[]{49, 0, 1 }, new byte[]{ 36, 63, 0 } ),
	new SingleColourLookup( new byte[]{49, 0, 2 }, new byte[]{ 48, 51, 0 } ),
	new SingleColourLookup( new byte[]{50, 0, 1 }, new byte[]{ 37, 63, 0 } ),
	new SingleColourLookup( new byte[]{50, 0, 0 }, new byte[]{ 48, 52, 0 } ),
	new SingleColourLookup( new byte[]{50, 0, 1 }, new byte[]{ 38, 63, 0 } ),
	new SingleColourLookup( new byte[]{50, 0, 2 }, new byte[]{ 48, 53, 0 } ),
	new SingleColourLookup( new byte[]{51, 0, 1 }, new byte[]{ 39, 63, 0 } ),
	new SingleColourLookup( new byte[]{51, 0, 0 }, new byte[]{ 48, 54, 0 } ),
	new SingleColourLookup( new byte[]{51, 0, 1 }, new byte[]{ 40, 63, 0 } ),
	new SingleColourLookup( new byte[]{51, 0, 2 }, new byte[]{ 48, 55, 0 } ),
	new SingleColourLookup( new byte[]{52, 0, 1 }, new byte[]{ 41, 63, 0 } ),
	new SingleColourLookup( new byte[]{52, 0, 0 }, new byte[]{ 48, 56, 0 } ),
	new SingleColourLookup( new byte[]{52, 0, 1 }, new byte[]{ 42, 63, 0 } ),
	new SingleColourLookup( new byte[]{52, 0, 2 }, new byte[]{ 48, 57, 0 } ),
	new SingleColourLookup( new byte[]{53, 0, 1 }, new byte[]{ 43, 63, 0 } ),
	new SingleColourLookup( new byte[]{53, 0, 0 }, new byte[]{ 48, 58, 0 } ),
	new SingleColourLookup( new byte[]{53, 0, 1 }, new byte[]{ 44, 63, 0 } ),
	new SingleColourLookup( new byte[]{53, 0, 2 }, new byte[]{ 48, 59, 0 } ),
	new SingleColourLookup( new byte[]{54, 0, 1 }, new byte[]{ 45, 63, 0 } ),
	new SingleColourLookup( new byte[]{54, 0, 0 }, new byte[]{ 48, 60, 0 } ),
	new SingleColourLookup( new byte[]{54, 0, 1 }, new byte[]{ 46, 63, 0 } ),
	new SingleColourLookup( new byte[]{54, 0, 2 }, new byte[]{ 48, 61, 0 } ),
	new SingleColourLookup( new byte[]{55, 0, 1 }, new byte[]{ 47, 63, 0 } ),
	new SingleColourLookup( new byte[]{55, 0, 0 }, new byte[]{ 48, 62, 0 } ),
	new SingleColourLookup( new byte[]{55, 0, 1 }, new byte[]{ 48, 63, 1 } ),
	new SingleColourLookup( new byte[]{55, 0, 2 }, new byte[]{ 48, 63, 0 } ),
	new SingleColourLookup( new byte[]{56, 0, 1 }, new byte[]{ 49, 63, 1 } ),
	new SingleColourLookup( new byte[]{56, 0, 0 }, new byte[]{ 49, 63, 0 } ),
	new SingleColourLookup( new byte[]{56, 0, 1 }, new byte[]{ 50, 63, 1 } ),
	new SingleColourLookup( new byte[]{56, 0, 2 }, new byte[]{ 50, 63, 0 } ),
	new SingleColourLookup( new byte[]{57, 0, 1 }, new byte[]{ 51, 63, 1 } ),
	new SingleColourLookup( new byte[]{57, 0, 0 }, new byte[]{ 51, 63, 0 } ),
	new SingleColourLookup( new byte[]{57, 0, 1 }, new byte[]{ 52, 63, 1 } ),
	new SingleColourLookup( new byte[]{57, 0, 2 }, new byte[]{ 52, 63, 0 } ),
	new SingleColourLookup( new byte[]{58, 0, 1 }, new byte[]{ 53, 63, 1 } ),
	new SingleColourLookup( new byte[]{58, 0, 0 }, new byte[]{ 53, 63, 0 } ),
	new SingleColourLookup( new byte[]{58, 0, 1 }, new byte[]{ 54, 63, 1 } ),
	new SingleColourLookup( new byte[]{58, 0, 2 }, new byte[]{ 54, 63, 0 } ),
	new SingleColourLookup( new byte[]{59, 0, 1 }, new byte[]{ 55, 63, 1 } ),
	new SingleColourLookup( new byte[]{59, 0, 0 }, new byte[]{ 55, 63, 0 } ),
	new SingleColourLookup( new byte[]{59, 0, 1 }, new byte[]{ 56, 63, 1 } ),
	new SingleColourLookup( new byte[]{59, 0, 2 }, new byte[]{ 56, 63, 0 } ),
	new SingleColourLookup( new byte[]{60, 0, 1 }, new byte[]{ 57, 63, 1 } ),
	new SingleColourLookup( new byte[]{60, 0, 0 }, new byte[]{ 57, 63, 0 } ),
	new SingleColourLookup( new byte[]{60, 0, 1 }, new byte[]{ 58, 63, 1 } ),
	new SingleColourLookup( new byte[]{60, 0, 2 }, new byte[]{ 58, 63, 0 } ),
	new SingleColourLookup( new byte[]{61, 0, 1 }, new byte[]{ 59, 63, 1 } ),
	new SingleColourLookup( new byte[]{61, 0, 0 }, new byte[]{ 59, 63, 0 } ),
	new SingleColourLookup( new byte[]{61, 0, 1 }, new byte[]{ 60, 63, 1 } ),
	new SingleColourLookup( new byte[]{61, 0, 2 }, new byte[]{ 60, 63, 0 } ),
	new SingleColourLookup( new byte[]{62, 0, 1 }, new byte[]{ 61, 63, 1 } ),
	new SingleColourLookup( new byte[]{62, 0, 0 }, new byte[]{ 61, 63, 0 } ),
	new SingleColourLookup( new byte[]{62, 0, 1 }, new byte[]{ 62, 63, 1 } ),
	new SingleColourLookup( new byte[]{62, 0, 2 }, new byte[]{ 62, 63, 0 } ),
	new SingleColourLookup( new byte[]{63, 0, 1 }, new byte[]{ 63, 63, 1 } ),
	new SingleColourLookup( new byte[]{63, 0, 0 }, new byte[]{ 63, 63, 0 } )
};

static SingleColourLookup[] lookup_5_4 = 
{
	new SingleColourLookup( new byte[]{0, 0, 0 }, new byte[]{ 0, 0, 0 } ),
	new SingleColourLookup( new byte[]{0, 0, 1 }, new byte[]{ 0, 1, 1 } ),
	new SingleColourLookup( new byte[]{0, 0, 2 }, new byte[]{ 0, 1, 0 } ),
	new SingleColourLookup( new byte[]{0, 0, 3 }, new byte[]{ 0, 1, 1 } ),
	new SingleColourLookup( new byte[]{0, 0, 4 }, new byte[]{ 0, 2, 1 } ),
	new SingleColourLookup( new byte[]{1, 0, 3 }, new byte[]{ 0, 2, 0 } ),
	new SingleColourLookup( new byte[]{1, 0, 2 }, new byte[]{ 0, 2, 1 } ),
	new SingleColourLookup( new byte[]{1, 0, 1 }, new byte[]{ 0, 3, 1 } ),
	new SingleColourLookup( new byte[]{1, 0, 0 }, new byte[]{ 0, 3, 0 } ),
	new SingleColourLookup( new byte[]{1, 0, 1 }, new byte[]{ 1, 2, 1 } ),
	new SingleColourLookup( new byte[]{1, 0, 2 }, new byte[]{ 1, 2, 0 } ),
	new SingleColourLookup( new byte[]{1, 0, 3 }, new byte[]{ 0, 4, 0 } ),
	new SingleColourLookup( new byte[]{1, 0, 4 }, new byte[]{ 0, 5, 1 } ),
	new SingleColourLookup( new byte[]{2, 0, 3 }, new byte[]{ 0, 5, 0 } ),
	new SingleColourLookup( new byte[]{2, 0, 2 }, new byte[]{ 0, 5, 1 } ),
	new SingleColourLookup( new byte[]{2, 0, 1 }, new byte[]{ 0, 6, 1 } ),
	new SingleColourLookup( new byte[]{2, 0, 0 }, new byte[]{ 0, 6, 0 } ),
	new SingleColourLookup( new byte[]{2, 0, 1 }, new byte[]{ 2, 3, 1 } ),
	new SingleColourLookup( new byte[]{2, 0, 2 }, new byte[]{ 2, 3, 0 } ),
	new SingleColourLookup( new byte[]{2, 0, 3 }, new byte[]{ 0, 7, 0 } ),
	new SingleColourLookup( new byte[]{2, 0, 4 }, new byte[]{ 1, 6, 1 } ),
	new SingleColourLookup( new byte[]{3, 0, 3 }, new byte[]{ 1, 6, 0 } ),
	new SingleColourLookup( new byte[]{3, 0, 2 }, new byte[]{ 0, 8, 0 } ),
	new SingleColourLookup( new byte[]{3, 0, 1 }, new byte[]{ 0, 9, 1 } ),
	new SingleColourLookup( new byte[]{3, 0, 0 }, new byte[]{ 0, 9, 0 } ),
	new SingleColourLookup( new byte[]{3, 0, 1 }, new byte[]{ 0, 9, 1 } ),
	new SingleColourLookup( new byte[]{3, 0, 2 }, new byte[]{ 0, 10, 1 } ),
	new SingleColourLookup( new byte[]{3, 0, 3 }, new byte[]{ 0, 10, 0 } ),
	new SingleColourLookup( new byte[]{3, 0, 4 }, new byte[]{ 2, 7, 1 } ),
	new SingleColourLookup( new byte[]{4, 0, 4 }, new byte[]{ 2, 7, 0 } ),
	new SingleColourLookup( new byte[]{4, 0, 3 }, new byte[]{ 0, 11, 0 } ),
	new SingleColourLookup( new byte[]{4, 0, 2 }, new byte[]{ 1, 10, 1 } ),
	new SingleColourLookup( new byte[]{4, 0, 1 }, new byte[]{ 1, 10, 0 } ),
	new SingleColourLookup( new byte[]{4, 0, 0 }, new byte[]{ 0, 12, 0 } ),
	new SingleColourLookup( new byte[]{4, 0, 1 }, new byte[]{ 0, 13, 1 } ),
	new SingleColourLookup( new byte[]{4, 0, 2 }, new byte[]{ 0, 13, 0 } ),
	new SingleColourLookup( new byte[]{4, 0, 3 }, new byte[]{ 0, 13, 1 } ),
	new SingleColourLookup( new byte[]{4, 0, 4 }, new byte[]{ 0, 14, 1 } ),
	new SingleColourLookup( new byte[]{5, 0, 3 }, new byte[]{ 0, 14, 0 } ),
	new SingleColourLookup( new byte[]{5, 0, 2 }, new byte[]{ 2, 11, 1 } ),
	new SingleColourLookup( new byte[]{5, 0, 1 }, new byte[]{ 2, 11, 0 } ),
	new SingleColourLookup( new byte[]{5, 0, 0 }, new byte[]{ 0, 15, 0 } ),
	new SingleColourLookup( new byte[]{5, 0, 1 }, new byte[]{ 1, 14, 1 } ),
	new SingleColourLookup( new byte[]{5, 0, 2 }, new byte[]{ 1, 14, 0 } ),
	new SingleColourLookup( new byte[]{5, 0, 3 }, new byte[]{ 0, 16, 0 } ),
	new SingleColourLookup( new byte[]{5, 0, 4 }, new byte[]{ 0, 17, 1 } ),
	new SingleColourLookup( new byte[]{6, 0, 3 }, new byte[]{ 0, 17, 0 } ),
	new SingleColourLookup( new byte[]{6, 0, 2 }, new byte[]{ 0, 17, 1 } ),
	new SingleColourLookup( new byte[]{6, 0, 1 }, new byte[]{ 0, 18, 1 } ),
	new SingleColourLookup( new byte[]{6, 0, 0 }, new byte[]{ 0, 18, 0 } ),
	new SingleColourLookup( new byte[]{6, 0, 1 }, new byte[]{ 2, 15, 1 } ),
	new SingleColourLookup( new byte[]{6, 0, 2 }, new byte[]{ 2, 15, 0 } ),
	new SingleColourLookup( new byte[]{6, 0, 3 }, new byte[]{ 0, 19, 0 } ),
	new SingleColourLookup( new byte[]{6, 0, 4 }, new byte[]{ 1, 18, 1 } ),
	new SingleColourLookup( new byte[]{7, 0, 3 }, new byte[]{ 1, 18, 0 } ),
	new SingleColourLookup( new byte[]{7, 0, 2 }, new byte[]{ 0, 20, 0 } ),
	new SingleColourLookup( new byte[]{7, 0, 1 }, new byte[]{ 0, 21, 1 } ),
	new SingleColourLookup( new byte[]{7, 0, 0 }, new byte[]{ 0, 21, 0 } ),
	new SingleColourLookup( new byte[]{7, 0, 1 }, new byte[]{ 0, 21, 1 } ),
	new SingleColourLookup( new byte[]{7, 0, 2 }, new byte[]{ 0, 22, 1 } ),
	new SingleColourLookup( new byte[]{7, 0, 3 }, new byte[]{ 0, 22, 0 } ),
	new SingleColourLookup( new byte[]{7, 0, 4 }, new byte[]{ 2, 19, 1 } ),
	new SingleColourLookup( new byte[]{8, 0, 4 }, new byte[]{ 2, 19, 0 } ),
	new SingleColourLookup( new byte[]{8, 0, 3 }, new byte[]{ 0, 23, 0 } ),
	new SingleColourLookup( new byte[]{8, 0, 2 }, new byte[]{ 1, 22, 1 } ),
	new SingleColourLookup( new byte[]{8, 0, 1 }, new byte[]{ 1, 22, 0 } ),
	new SingleColourLookup( new byte[]{8, 0, 0 }, new byte[]{ 0, 24, 0 } ),
	new SingleColourLookup( new byte[]{8, 0, 1 }, new byte[]{ 0, 25, 1 } ),
	new SingleColourLookup( new byte[]{8, 0, 2 }, new byte[]{ 0, 25, 0 } ),
	new SingleColourLookup( new byte[]{8, 0, 3 }, new byte[]{ 0, 25, 1 } ),
	new SingleColourLookup( new byte[]{8, 0, 4 }, new byte[]{ 0, 26, 1 } ),
	new SingleColourLookup( new byte[]{9, 0, 3 }, new byte[]{ 0, 26, 0 } ),
	new SingleColourLookup( new byte[]{9, 0, 2 }, new byte[]{ 2, 23, 1 } ),
	new SingleColourLookup( new byte[]{9, 0, 1 }, new byte[]{ 2, 23, 0 } ),
	new SingleColourLookup( new byte[]{9, 0, 0 }, new byte[]{ 0, 27, 0 } ),
	new SingleColourLookup( new byte[]{9, 0, 1 }, new byte[]{ 1, 26, 1 } ),
	new SingleColourLookup( new byte[]{9, 0, 2 }, new byte[]{ 1, 26, 0 } ),
	new SingleColourLookup( new byte[]{9, 0, 3 }, new byte[]{ 0, 28, 0 } ),
	new SingleColourLookup( new byte[]{9, 0, 4 }, new byte[]{ 0, 29, 1 } ),
	new SingleColourLookup( new byte[]{10, 0, 3 }, new byte[]{ 0, 29, 0 } ),
	new SingleColourLookup( new byte[]{10, 0, 2 }, new byte[]{ 0, 29, 1 } ),
	new SingleColourLookup( new byte[]{10, 0, 1 }, new byte[]{ 0, 30, 1 } ),
	new SingleColourLookup( new byte[]{10, 0, 0 }, new byte[]{ 0, 30, 0 } ),
	new SingleColourLookup( new byte[]{10, 0, 1 }, new byte[]{ 2, 27, 1 } ),
	new SingleColourLookup( new byte[]{10, 0, 2 }, new byte[]{ 2, 27, 0 } ),
	new SingleColourLookup( new byte[]{10, 0, 3 }, new byte[]{ 0, 31, 0 } ),
	new SingleColourLookup( new byte[]{10, 0, 4 }, new byte[]{ 1, 30, 1 } ),
	new SingleColourLookup( new byte[]{11, 0, 3 }, new byte[]{ 1, 30, 0 } ),
	new SingleColourLookup( new byte[]{11, 0, 2 }, new byte[]{ 4, 24, 0 } ),
	new SingleColourLookup( new byte[]{11, 0, 1 }, new byte[]{ 1, 31, 1 } ),
	new SingleColourLookup( new byte[]{11, 0, 0 }, new byte[]{ 1, 31, 0 } ),
	new SingleColourLookup( new byte[]{11, 0, 1 }, new byte[]{ 1, 31, 1 } ),
	new SingleColourLookup( new byte[]{11, 0, 2 }, new byte[]{ 2, 30, 1 } ),
	new SingleColourLookup( new byte[]{11, 0, 3 }, new byte[]{ 2, 30, 0 } ),
	new SingleColourLookup( new byte[]{11, 0, 4 }, new byte[]{ 2, 31, 1 } ),
	new SingleColourLookup( new byte[]{12, 0, 4 }, new byte[]{ 2, 31, 0 } ),
	new SingleColourLookup( new byte[]{12, 0, 3 }, new byte[]{ 4, 27, 0 } ),
	new SingleColourLookup( new byte[]{12, 0, 2 }, new byte[]{ 3, 30, 1 } ),
	new SingleColourLookup( new byte[]{12, 0, 1 }, new byte[]{ 3, 30, 0 } ),
	new SingleColourLookup( new byte[]{12, 0, 0 }, new byte[]{ 4, 28, 0 } ),
	new SingleColourLookup( new byte[]{12, 0, 1 }, new byte[]{ 3, 31, 1 } ),
	new SingleColourLookup( new byte[]{12, 0, 2 }, new byte[]{ 3, 31, 0 } ),
	new SingleColourLookup( new byte[]{12, 0, 3 }, new byte[]{ 3, 31, 1 } ),
	new SingleColourLookup( new byte[]{12, 0, 4 }, new byte[]{ 4, 30, 1 } ),
	new SingleColourLookup( new byte[]{13, 0, 3 }, new byte[]{ 4, 30, 0 } ),
	new SingleColourLookup( new byte[]{13, 0, 2 }, new byte[]{ 6, 27, 1 } ),
	new SingleColourLookup( new byte[]{13, 0, 1 }, new byte[]{ 6, 27, 0 } ),
	new SingleColourLookup( new byte[]{13, 0, 0 }, new byte[]{ 4, 31, 0 } ),
	new SingleColourLookup( new byte[]{13, 0, 1 }, new byte[]{ 5, 30, 1 } ),
	new SingleColourLookup( new byte[]{13, 0, 2 }, new byte[]{ 5, 30, 0 } ),
	new SingleColourLookup( new byte[]{13, 0, 3 }, new byte[]{ 8, 24, 0 } ),
	new SingleColourLookup( new byte[]{13, 0, 4 }, new byte[]{ 5, 31, 1 } ),
	new SingleColourLookup( new byte[]{14, 0, 3 }, new byte[]{ 5, 31, 0 } ),
	new SingleColourLookup( new byte[]{14, 0, 2 }, new byte[]{ 5, 31, 1 } ),
	new SingleColourLookup( new byte[]{14, 0, 1 }, new byte[]{ 6, 30, 1 } ),
	new SingleColourLookup( new byte[]{14, 0, 0 }, new byte[]{ 6, 30, 0 } ),
	new SingleColourLookup( new byte[]{14, 0, 1 }, new byte[]{ 6, 31, 1 } ),
	new SingleColourLookup( new byte[]{14, 0, 2 }, new byte[]{ 6, 31, 0 } ),
	new SingleColourLookup( new byte[]{14, 0, 3 }, new byte[]{ 8, 27, 0 } ),
	new SingleColourLookup( new byte[]{14, 0, 4 }, new byte[]{ 7, 30, 1 } ),
	new SingleColourLookup( new byte[]{15, 0, 3 }, new byte[]{ 7, 30, 0 } ),
	new SingleColourLookup( new byte[]{15, 0, 2 }, new byte[]{ 8, 28, 0 } ),
	new SingleColourLookup( new byte[]{15, 0, 1 }, new byte[]{ 7, 31, 1 } ),
	new SingleColourLookup( new byte[]{15, 0, 0 }, new byte[]{ 7, 31, 0 } ),
	new SingleColourLookup( new byte[]{15, 0, 1 }, new byte[]{ 7, 31, 1 } ),
	new SingleColourLookup( new byte[]{15, 0, 2 }, new byte[]{ 8, 30, 1 } ),
	new SingleColourLookup( new byte[]{15, 0, 3 }, new byte[]{ 8, 30, 0 } ),
	new SingleColourLookup( new byte[]{15, 0, 4 }, new byte[]{ 10, 27, 1 } ),
	new SingleColourLookup( new byte[]{16, 0, 4 }, new byte[]{ 10, 27, 0 } ),
	new SingleColourLookup( new byte[]{16, 0, 3 }, new byte[]{ 8, 31, 0 } ),
	new SingleColourLookup( new byte[]{16, 0, 2 }, new byte[]{ 9, 30, 1 } ),
	new SingleColourLookup( new byte[]{16, 0, 1 }, new byte[]{ 9, 30, 0 } ),
	new SingleColourLookup( new byte[]{16, 0, 0 }, new byte[]{ 12, 24, 0 } ),
	new SingleColourLookup( new byte[]{16, 0, 1 }, new byte[]{ 9, 31, 1 } ),
	new SingleColourLookup( new byte[]{16, 0, 2 }, new byte[]{ 9, 31, 0 } ),
	new SingleColourLookup( new byte[]{16, 0, 3 }, new byte[]{ 9, 31, 1 } ),
	new SingleColourLookup( new byte[]{16, 0, 4 }, new byte[]{ 10, 30, 1 } ),
	new SingleColourLookup( new byte[]{17, 0, 3 }, new byte[]{ 10, 30, 0 } ),
	new SingleColourLookup( new byte[]{17, 0, 2 }, new byte[]{ 10, 31, 1 } ),
	new SingleColourLookup( new byte[]{17, 0, 1 }, new byte[]{ 10, 31, 0 } ),
	new SingleColourLookup( new byte[]{17, 0, 0 }, new byte[]{ 12, 27, 0 } ),
	new SingleColourLookup( new byte[]{17, 0, 1 }, new byte[]{ 11, 30, 1 } ),
	new SingleColourLookup( new byte[]{17, 0, 2 }, new byte[]{ 11, 30, 0 } ),
	new SingleColourLookup( new byte[]{17, 0, 3 }, new byte[]{ 12, 28, 0 } ),
	new SingleColourLookup( new byte[]{17, 0, 4 }, new byte[]{ 11, 31, 1 } ),
	new SingleColourLookup( new byte[]{18, 0, 3 }, new byte[]{ 11, 31, 0 } ),
	new SingleColourLookup( new byte[]{18, 0, 2 }, new byte[]{ 11, 31, 1 } ),
	new SingleColourLookup( new byte[]{18, 0, 1 }, new byte[]{ 12, 30, 1 } ),
	new SingleColourLookup( new byte[]{18, 0, 0 }, new byte[]{ 12, 30, 0 } ),
	new SingleColourLookup( new byte[]{18, 0, 1 }, new byte[]{ 14, 27, 1 } ),
	new SingleColourLookup( new byte[]{18, 0, 2 }, new byte[]{ 14, 27, 0 } ),
	new SingleColourLookup( new byte[]{18, 0, 3 }, new byte[]{ 12, 31, 0 } ),
	new SingleColourLookup( new byte[]{18, 0, 4 }, new byte[]{ 13, 30, 1 } ),
	new SingleColourLookup( new byte[]{19, 0, 3 }, new byte[]{ 13, 30, 0 } ),
	new SingleColourLookup( new byte[]{19, 0, 2 }, new byte[]{ 16, 24, 0 } ),
	new SingleColourLookup( new byte[]{19, 0, 1 }, new byte[]{ 13, 31, 1 } ),
	new SingleColourLookup( new byte[]{19, 0, 0 }, new byte[]{ 13, 31, 0 } ),
	new SingleColourLookup( new byte[]{19, 0, 1 }, new byte[]{ 13, 31, 1 } ),
	new SingleColourLookup( new byte[]{19, 0, 2 }, new byte[]{ 14, 30, 1 } ),
	new SingleColourLookup( new byte[]{19, 0, 3 }, new byte[]{ 14, 30, 0 } ),
	new SingleColourLookup( new byte[]{19, 0, 4 }, new byte[]{ 14, 31, 1 } ),
	new SingleColourLookup( new byte[]{20, 0, 4 }, new byte[]{ 14, 31, 0 } ),
	new SingleColourLookup( new byte[]{20, 0, 3 }, new byte[]{ 16, 27, 0 } ),
	new SingleColourLookup( new byte[]{20, 0, 2 }, new byte[]{ 15, 30, 1 } ),
	new SingleColourLookup( new byte[]{20, 0, 1 }, new byte[]{ 15, 30, 0 } ),
	new SingleColourLookup( new byte[]{20, 0, 0 }, new byte[]{ 16, 28, 0 } ),
	new SingleColourLookup( new byte[]{20, 0, 1 }, new byte[]{ 15, 31, 1 } ),
	new SingleColourLookup( new byte[]{20, 0, 2 }, new byte[]{ 15, 31, 0 } ),
	new SingleColourLookup( new byte[]{20, 0, 3 }, new byte[]{ 15, 31, 1 } ),
	new SingleColourLookup( new byte[]{20, 0, 4 }, new byte[]{ 16, 30, 1 } ),
	new SingleColourLookup( new byte[]{21, 0, 3 }, new byte[]{ 16, 30, 0 } ),
	new SingleColourLookup( new byte[]{21, 0, 2 }, new byte[]{ 18, 27, 1 } ),
	new SingleColourLookup( new byte[]{21, 0, 1 }, new byte[]{ 18, 27, 0 } ),
	new SingleColourLookup( new byte[]{21, 0, 0 }, new byte[]{ 16, 31, 0 } ),
	new SingleColourLookup( new byte[]{21, 0, 1 }, new byte[]{ 17, 30, 1 } ),
	new SingleColourLookup( new byte[]{21, 0, 2 }, new byte[]{ 17, 30, 0 } ),
	new SingleColourLookup( new byte[]{21, 0, 3 }, new byte[]{ 20, 24, 0 } ),
	new SingleColourLookup( new byte[]{21, 0, 4 }, new byte[]{ 17, 31, 1 } ),
	new SingleColourLookup( new byte[]{22, 0, 3 }, new byte[]{ 17, 31, 0 } ),
	new SingleColourLookup( new byte[]{22, 0, 2 }, new byte[]{ 17, 31, 1 } ),
	new SingleColourLookup( new byte[]{22, 0, 1 }, new byte[]{ 18, 30, 1 } ),
	new SingleColourLookup( new byte[]{22, 0, 0 }, new byte[]{ 18, 30, 0 } ),
	new SingleColourLookup( new byte[]{22, 0, 1 }, new byte[]{ 18, 31, 1 } ),
	new SingleColourLookup( new byte[]{22, 0, 2 }, new byte[]{ 18, 31, 0 } ),
	new SingleColourLookup( new byte[]{22, 0, 3 }, new byte[]{ 20, 27, 0 } ),
	new SingleColourLookup( new byte[]{22, 0, 4 }, new byte[]{ 19, 30, 1 } ),
	new SingleColourLookup( new byte[]{23, 0, 3 }, new byte[]{ 19, 30, 0 } ),
	new SingleColourLookup( new byte[]{23, 0, 2 }, new byte[]{ 20, 28, 0 } ),
	new SingleColourLookup( new byte[]{23, 0, 1 }, new byte[]{ 19, 31, 1 } ),
	new SingleColourLookup( new byte[]{23, 0, 0 }, new byte[]{ 19, 31, 0 } ),
	new SingleColourLookup( new byte[]{23, 0, 1 }, new byte[]{ 19, 31, 1 } ),
	new SingleColourLookup( new byte[]{23, 0, 2 }, new byte[]{ 20, 30, 1 } ),
	new SingleColourLookup( new byte[]{23, 0, 3 }, new byte[]{ 20, 30, 0 } ),
	new SingleColourLookup( new byte[]{23, 0, 4 }, new byte[]{ 22, 27, 1 } ),
	new SingleColourLookup( new byte[]{24, 0, 4 }, new byte[]{ 22, 27, 0 } ),
	new SingleColourLookup( new byte[]{24, 0, 3 }, new byte[]{ 20, 31, 0 } ),
	new SingleColourLookup( new byte[]{24, 0, 2 }, new byte[]{ 21, 30, 1 } ),
	new SingleColourLookup( new byte[]{24, 0, 1 }, new byte[]{ 21, 30, 0 } ),
	new SingleColourLookup( new byte[]{24, 0, 0 }, new byte[]{ 24, 24, 0 } ),
	new SingleColourLookup( new byte[]{24, 0, 1 }, new byte[]{ 21, 31, 1 } ),
	new SingleColourLookup( new byte[]{24, 0, 2 }, new byte[]{ 21, 31, 0 } ),
	new SingleColourLookup( new byte[]{24, 0, 3 }, new byte[]{ 21, 31, 1 } ),
	new SingleColourLookup( new byte[]{24, 0, 4 }, new byte[]{ 22, 30, 1 } ),
	new SingleColourLookup( new byte[]{25, 0, 3 }, new byte[]{ 22, 30, 0 } ),
	new SingleColourLookup( new byte[]{25, 0, 2 }, new byte[]{ 22, 31, 1 } ),
	new SingleColourLookup( new byte[]{25, 0, 1 }, new byte[]{ 22, 31, 0 } ),
	new SingleColourLookup( new byte[]{25, 0, 0 }, new byte[]{ 24, 27, 0 } ),
	new SingleColourLookup( new byte[]{25, 0, 1 }, new byte[]{ 23, 30, 1 } ),
	new SingleColourLookup( new byte[]{25, 0, 2 }, new byte[]{ 23, 30, 0 } ),
	new SingleColourLookup( new byte[]{25, 0, 3 }, new byte[]{ 24, 28, 0 } ),
	new SingleColourLookup( new byte[]{25, 0, 4 }, new byte[]{ 23, 31, 1 } ),
	new SingleColourLookup( new byte[]{26, 0, 3 }, new byte[]{ 23, 31, 0 } ),
	new SingleColourLookup( new byte[]{26, 0, 2 }, new byte[]{ 23, 31, 1 } ),
	new SingleColourLookup( new byte[]{26, 0, 1 }, new byte[]{ 24, 30, 1 } ),
	new SingleColourLookup( new byte[]{26, 0, 0 }, new byte[]{ 24, 30, 0 } ),
	new SingleColourLookup( new byte[]{26, 0, 1 }, new byte[]{ 26, 27, 1 } ),
	new SingleColourLookup( new byte[]{26, 0, 2 }, new byte[]{ 26, 27, 0 } ),
	new SingleColourLookup( new byte[]{26, 0, 3 }, new byte[]{ 24, 31, 0 } ),
	new SingleColourLookup( new byte[]{26, 0, 4 }, new byte[]{ 25, 30, 1 } ),
	new SingleColourLookup( new byte[]{27, 0, 3 }, new byte[]{ 25, 30, 0 } ),
	new SingleColourLookup( new byte[]{27, 0, 2 }, new byte[]{ 28, 24, 0 } ),
	new SingleColourLookup( new byte[]{27, 0, 1 }, new byte[]{ 25, 31, 1 } ),
	new SingleColourLookup( new byte[]{27, 0, 0 }, new byte[]{ 25, 31, 0 } ),
	new SingleColourLookup( new byte[]{27, 0, 1 }, new byte[]{ 25, 31, 1 } ),
	new SingleColourLookup( new byte[]{27, 0, 2 }, new byte[]{ 26, 30, 1 } ),
	new SingleColourLookup( new byte[]{27, 0, 3 }, new byte[]{ 26, 30, 0 } ),
	new SingleColourLookup( new byte[]{27, 0, 4 }, new byte[]{ 26, 31, 1 } ),
	new SingleColourLookup( new byte[]{28, 0, 4 }, new byte[]{ 26, 31, 0 } ),
	new SingleColourLookup( new byte[]{28, 0, 3 }, new byte[]{ 28, 27, 0 } ),
	new SingleColourLookup( new byte[]{28, 0, 2 }, new byte[]{ 27, 30, 1 } ),
	new SingleColourLookup( new byte[]{28, 0, 1 }, new byte[]{ 27, 30, 0 } ),
	new SingleColourLookup( new byte[]{28, 0, 0 }, new byte[]{ 28, 28, 0 } ),
	new SingleColourLookup( new byte[]{28, 0, 1 }, new byte[]{ 27, 31, 1 } ),
	new SingleColourLookup( new byte[]{28, 0, 2 }, new byte[]{ 27, 31, 0 } ),
	new SingleColourLookup( new byte[]{28, 0, 3 }, new byte[]{ 27, 31, 1 } ),
	new SingleColourLookup( new byte[]{28, 0, 4 }, new byte[]{ 28, 30, 1 } ),
	new SingleColourLookup( new byte[]{29, 0, 3 }, new byte[]{ 28, 30, 0 } ),
	new SingleColourLookup( new byte[]{29, 0, 2 }, new byte[]{ 30, 27, 1 } ),
	new SingleColourLookup( new byte[]{29, 0, 1 }, new byte[]{ 30, 27, 0 } ),
	new SingleColourLookup( new byte[]{29, 0, 0 }, new byte[]{ 28, 31, 0 } ),
	new SingleColourLookup( new byte[]{29, 0, 1 }, new byte[]{ 29, 30, 1 } ),
	new SingleColourLookup( new byte[]{29, 0, 2 }, new byte[]{ 29, 30, 0 } ),
	new SingleColourLookup( new byte[]{29, 0, 3 }, new byte[]{ 29, 30, 1 } ),
	new SingleColourLookup( new byte[]{29, 0, 4 }, new byte[]{ 29, 31, 1 } ),
	new SingleColourLookup( new byte[]{30, 0, 3 }, new byte[]{ 29, 31, 0 } ),
	new SingleColourLookup( new byte[]{30, 0, 2 }, new byte[]{ 29, 31, 1 } ),
	new SingleColourLookup( new byte[]{30, 0, 1 }, new byte[]{ 30, 30, 1 } ),
	new SingleColourLookup( new byte[]{30, 0, 0 }, new byte[]{ 30, 30, 0 } ),
	new SingleColourLookup( new byte[]{30, 0, 1 }, new byte[]{ 30, 31, 1 } ),
	new SingleColourLookup( new byte[]{30, 0, 2 }, new byte[]{ 30, 31, 0 } ),
	new SingleColourLookup( new byte[]{30, 0, 3 }, new byte[]{ 30, 31, 1 } ),
	new SingleColourLookup( new byte[]{30, 0, 4 }, new byte[]{ 31, 30, 1 } ),
	new SingleColourLookup( new byte[]{31, 0, 3 }, new byte[]{ 31, 30, 0 } ),
	new SingleColourLookup( new byte[]{31, 0, 2 }, new byte[]{ 31, 30, 1 } ),
	new SingleColourLookup( new byte[]{31, 0, 1 }, new byte[]{ 31, 31, 1 } ),
	new SingleColourLookup( new byte[]{31, 0, 0 }, new byte[]{ 31, 31, 0 } )
};

static SingleColourLookup[] lookup_6_4 = 
{
	new SingleColourLookup( new byte[]{0, 0, 0 }, new byte[]{ 0, 0, 0 } ),
	new SingleColourLookup( new byte[]{0, 0, 1 }, new byte[]{ 0, 1, 0 } ),
	new SingleColourLookup( new byte[]{0, 0, 2 }, new byte[]{ 0, 2, 0 } ),
	new SingleColourLookup( new byte[]{1, 0, 1 }, new byte[]{ 0, 3, 1 } ),
	new SingleColourLookup( new byte[]{1, 0, 0 }, new byte[]{ 0, 3, 0 } ),
	new SingleColourLookup( new byte[]{1, 0, 1 }, new byte[]{ 0, 4, 0 } ),
	new SingleColourLookup( new byte[]{1, 0, 2 }, new byte[]{ 0, 5, 0 } ),
	new SingleColourLookup( new byte[]{2, 0, 1 }, new byte[]{ 0, 6, 1 } ),
	new SingleColourLookup( new byte[]{2, 0, 0 }, new byte[]{ 0, 6, 0 } ),
	new SingleColourLookup( new byte[]{2, 0, 1 }, new byte[]{ 0, 7, 0 } ),
	new SingleColourLookup( new byte[]{2, 0, 2 }, new byte[]{ 0, 8, 0 } ),
	new SingleColourLookup( new byte[]{3, 0, 1 }, new byte[]{ 0, 9, 1 } ),
	new SingleColourLookup( new byte[]{3, 0, 0 }, new byte[]{ 0, 9, 0 } ),
	new SingleColourLookup( new byte[]{3, 0, 1 }, new byte[]{ 0, 10, 0 } ),
	new SingleColourLookup( new byte[]{3, 0, 2 }, new byte[]{ 0, 11, 0 } ),
	new SingleColourLookup( new byte[]{4, 0, 1 }, new byte[]{ 0, 12, 1 } ),
	new SingleColourLookup( new byte[]{4, 0, 0 }, new byte[]{ 0, 12, 0 } ),
	new SingleColourLookup( new byte[]{4, 0, 1 }, new byte[]{ 0, 13, 0 } ),
	new SingleColourLookup( new byte[]{4, 0, 2 }, new byte[]{ 0, 14, 0 } ),
	new SingleColourLookup( new byte[]{5, 0, 1 }, new byte[]{ 0, 15, 1 } ),
	new SingleColourLookup( new byte[]{5, 0, 0 }, new byte[]{ 0, 15, 0 } ),
	new SingleColourLookup( new byte[]{5, 0, 1 }, new byte[]{ 0, 16, 0 } ),
	new SingleColourLookup( new byte[]{5, 0, 2 }, new byte[]{ 1, 15, 0 } ),
	new SingleColourLookup( new byte[]{6, 0, 1 }, new byte[]{ 0, 17, 0 } ),
	new SingleColourLookup( new byte[]{6, 0, 0 }, new byte[]{ 0, 18, 0 } ),
	new SingleColourLookup( new byte[]{6, 0, 1 }, new byte[]{ 0, 19, 0 } ),
	new SingleColourLookup( new byte[]{6, 0, 2 }, new byte[]{ 3, 14, 0 } ),
	new SingleColourLookup( new byte[]{7, 0, 1 }, new byte[]{ 0, 20, 0 } ),
	new SingleColourLookup( new byte[]{7, 0, 0 }, new byte[]{ 0, 21, 0 } ),
	new SingleColourLookup( new byte[]{7, 0, 1 }, new byte[]{ 0, 22, 0 } ),
	new SingleColourLookup( new byte[]{7, 0, 2 }, new byte[]{ 4, 15, 0 } ),
	new SingleColourLookup( new byte[]{8, 0, 1 }, new byte[]{ 0, 23, 0 } ),
	new SingleColourLookup( new byte[]{8, 0, 0 }, new byte[]{ 0, 24, 0 } ),
	new SingleColourLookup( new byte[]{8, 0, 1 }, new byte[]{ 0, 25, 0 } ),
	new SingleColourLookup( new byte[]{8, 0, 2 }, new byte[]{ 6, 14, 0 } ),
	new SingleColourLookup( new byte[]{9, 0, 1 }, new byte[]{ 0, 26, 0 } ),
	new SingleColourLookup( new byte[]{9, 0, 0 }, new byte[]{ 0, 27, 0 } ),
	new SingleColourLookup( new byte[]{9, 0, 1 }, new byte[]{ 0, 28, 0 } ),
	new SingleColourLookup( new byte[]{9, 0, 2 }, new byte[]{ 7, 15, 0 } ),
	new SingleColourLookup( new byte[]{10, 0, 1 }, new byte[]{ 0, 29, 0 } ),
	new SingleColourLookup( new byte[]{10, 0, 0 }, new byte[]{ 0, 30, 0 } ),
	new SingleColourLookup( new byte[]{10, 0, 1 }, new byte[]{ 0, 31, 0 } ),
	new SingleColourLookup( new byte[]{10, 0, 2 }, new byte[]{ 9, 14, 0 } ),
	new SingleColourLookup( new byte[]{11, 0, 1 }, new byte[]{ 0, 32, 0 } ),
	new SingleColourLookup( new byte[]{11, 0, 0 }, new byte[]{ 0, 33, 0 } ),
	new SingleColourLookup( new byte[]{11, 0, 1 }, new byte[]{ 2, 30, 0 } ),
	new SingleColourLookup( new byte[]{11, 0, 2 }, new byte[]{ 0, 34, 0 } ),
	new SingleColourLookup( new byte[]{12, 0, 1 }, new byte[]{ 0, 35, 0 } ),
	new SingleColourLookup( new byte[]{12, 0, 0 }, new byte[]{ 0, 36, 0 } ),
	new SingleColourLookup( new byte[]{12, 0, 1 }, new byte[]{ 3, 31, 0 } ),
	new SingleColourLookup( new byte[]{12, 0, 2 }, new byte[]{ 0, 37, 0 } ),
	new SingleColourLookup( new byte[]{13, 0, 1 }, new byte[]{ 0, 38, 0 } ),
	new SingleColourLookup( new byte[]{13, 0, 0 }, new byte[]{ 0, 39, 0 } ),
	new SingleColourLookup( new byte[]{13, 0, 1 }, new byte[]{ 5, 30, 0 } ),
	new SingleColourLookup( new byte[]{13, 0, 2 }, new byte[]{ 0, 40, 0 } ),
	new SingleColourLookup( new byte[]{14, 0, 1 }, new byte[]{ 0, 41, 0 } ),
	new SingleColourLookup( new byte[]{14, 0, 0 }, new byte[]{ 0, 42, 0 } ),
	new SingleColourLookup( new byte[]{14, 0, 1 }, new byte[]{ 6, 31, 0 } ),
	new SingleColourLookup( new byte[]{14, 0, 2 }, new byte[]{ 0, 43, 0 } ),
	new SingleColourLookup( new byte[]{15, 0, 1 }, new byte[]{ 0, 44, 0 } ),
	new SingleColourLookup( new byte[]{15, 0, 0 }, new byte[]{ 0, 45, 0 } ),
	new SingleColourLookup( new byte[]{15, 0, 1 }, new byte[]{ 8, 30, 0 } ),
	new SingleColourLookup( new byte[]{15, 0, 2 }, new byte[]{ 0, 46, 0 } ),
	new SingleColourLookup( new byte[]{16, 0, 2 }, new byte[]{ 0, 47, 0 } ),
	new SingleColourLookup( new byte[]{16, 0, 1 }, new byte[]{ 1, 46, 0 } ),
	new SingleColourLookup( new byte[]{16, 0, 0 }, new byte[]{ 0, 48, 0 } ),
	new SingleColourLookup( new byte[]{16, 0, 1 }, new byte[]{ 0, 49, 0 } ),
	new SingleColourLookup( new byte[]{16, 0, 2 }, new byte[]{ 0, 50, 0 } ),
	new SingleColourLookup( new byte[]{17, 0, 1 }, new byte[]{ 2, 47, 0 } ),
	new SingleColourLookup( new byte[]{17, 0, 0 }, new byte[]{ 0, 51, 0 } ),
	new SingleColourLookup( new byte[]{17, 0, 1 }, new byte[]{ 0, 52, 0 } ),
	new SingleColourLookup( new byte[]{17, 0, 2 }, new byte[]{ 0, 53, 0 } ),
	new SingleColourLookup( new byte[]{18, 0, 1 }, new byte[]{ 4, 46, 0 } ),
	new SingleColourLookup( new byte[]{18, 0, 0 }, new byte[]{ 0, 54, 0 } ),
	new SingleColourLookup( new byte[]{18, 0, 1 }, new byte[]{ 0, 55, 0 } ),
	new SingleColourLookup( new byte[]{18, 0, 2 }, new byte[]{ 0, 56, 0 } ),
	new SingleColourLookup( new byte[]{19, 0, 1 }, new byte[]{ 5, 47, 0 } ),
	new SingleColourLookup( new byte[]{19, 0, 0 }, new byte[]{ 0, 57, 0 } ),
	new SingleColourLookup( new byte[]{19, 0, 1 }, new byte[]{ 0, 58, 0 } ),
	new SingleColourLookup( new byte[]{19, 0, 2 }, new byte[]{ 0, 59, 0 } ),
	new SingleColourLookup( new byte[]{20, 0, 1 }, new byte[]{ 7, 46, 0 } ),
	new SingleColourLookup( new byte[]{20, 0, 0 }, new byte[]{ 0, 60, 0 } ),
	new SingleColourLookup( new byte[]{20, 0, 1 }, new byte[]{ 0, 61, 0 } ),
	new SingleColourLookup( new byte[]{20, 0, 2 }, new byte[]{ 0, 62, 0 } ),
	new SingleColourLookup( new byte[]{21, 0, 1 }, new byte[]{ 8, 47, 0 } ),
	new SingleColourLookup( new byte[]{21, 0, 0 }, new byte[]{ 0, 63, 0 } ),
	new SingleColourLookup( new byte[]{21, 0, 1 }, new byte[]{ 1, 62, 0 } ),
	new SingleColourLookup( new byte[]{21, 0, 2 }, new byte[]{ 1, 63, 0 } ),
	new SingleColourLookup( new byte[]{22, 0, 1 }, new byte[]{ 10, 46, 0 } ),
	new SingleColourLookup( new byte[]{22, 0, 0 }, new byte[]{ 2, 62, 0 } ),
	new SingleColourLookup( new byte[]{22, 0, 1 }, new byte[]{ 2, 63, 0 } ),
	new SingleColourLookup( new byte[]{22, 0, 2 }, new byte[]{ 3, 62, 0 } ),
	new SingleColourLookup( new byte[]{23, 0, 1 }, new byte[]{ 11, 47, 0 } ),
	new SingleColourLookup( new byte[]{23, 0, 0 }, new byte[]{ 3, 63, 0 } ),
	new SingleColourLookup( new byte[]{23, 0, 1 }, new byte[]{ 4, 62, 0 } ),
	new SingleColourLookup( new byte[]{23, 0, 2 }, new byte[]{ 4, 63, 0 } ),
	new SingleColourLookup( new byte[]{24, 0, 1 }, new byte[]{ 13, 46, 0 } ),
	new SingleColourLookup( new byte[]{24, 0, 0 }, new byte[]{ 5, 62, 0 } ),
	new SingleColourLookup( new byte[]{24, 0, 1 }, new byte[]{ 5, 63, 0 } ),
	new SingleColourLookup( new byte[]{24, 0, 2 }, new byte[]{ 6, 62, 0 } ),
	new SingleColourLookup( new byte[]{25, 0, 1 }, new byte[]{ 14, 47, 0 } ),
	new SingleColourLookup( new byte[]{25, 0, 0 }, new byte[]{ 6, 63, 0 } ),
	new SingleColourLookup( new byte[]{25, 0, 1 }, new byte[]{ 7, 62, 0 } ),
	new SingleColourLookup( new byte[]{25, 0, 2 }, new byte[]{ 7, 63, 0 } ),
	new SingleColourLookup( new byte[]{26, 0, 1 }, new byte[]{ 16, 45, 0 } ),
	new SingleColourLookup( new byte[]{26, 0, 0 }, new byte[]{ 8, 62, 0 } ),
	new SingleColourLookup( new byte[]{26, 0, 1 }, new byte[]{ 8, 63, 0 } ),
	new SingleColourLookup( new byte[]{26, 0, 2 }, new byte[]{ 9, 62, 0 } ),
	new SingleColourLookup( new byte[]{27, 0, 1 }, new byte[]{ 16, 48, 0 } ),
	new SingleColourLookup( new byte[]{27, 0, 0 }, new byte[]{ 9, 63, 0 } ),
	new SingleColourLookup( new byte[]{27, 0, 1 }, new byte[]{ 10, 62, 0 } ),
	new SingleColourLookup( new byte[]{27, 0, 2 }, new byte[]{ 10, 63, 0 } ),
	new SingleColourLookup( new byte[]{28, 0, 1 }, new byte[]{ 16, 51, 0 } ),
	new SingleColourLookup( new byte[]{28, 0, 0 }, new byte[]{ 11, 62, 0 } ),
	new SingleColourLookup( new byte[]{28, 0, 1 }, new byte[]{ 11, 63, 0 } ),
	new SingleColourLookup( new byte[]{28, 0, 2 }, new byte[]{ 12, 62, 0 } ),
	new SingleColourLookup( new byte[]{29, 0, 1 }, new byte[]{ 16, 54, 0 } ),
	new SingleColourLookup( new byte[]{29, 0, 0 }, new byte[]{ 12, 63, 0 } ),
	new SingleColourLookup( new byte[]{29, 0, 1 }, new byte[]{ 13, 62, 0 } ),
	new SingleColourLookup( new byte[]{29, 0, 2 }, new byte[]{ 13, 63, 0 } ),
	new SingleColourLookup( new byte[]{30, 0, 1 }, new byte[]{ 16, 57, 0 } ),
	new SingleColourLookup( new byte[]{30, 0, 0 }, new byte[]{ 14, 62, 0 } ),
	new SingleColourLookup( new byte[]{30, 0, 1 }, new byte[]{ 14, 63, 0 } ),
	new SingleColourLookup( new byte[]{30, 0, 2 }, new byte[]{ 15, 62, 0 } ),
	new SingleColourLookup( new byte[]{31, 0, 1 }, new byte[]{ 16, 60, 0 } ),
	new SingleColourLookup( new byte[]{31, 0, 0 }, new byte[]{ 15, 63, 0 } ),
	new SingleColourLookup( new byte[]{31, 0, 1 }, new byte[]{ 24, 46, 0 } ),
	new SingleColourLookup( new byte[]{31, 0, 2 }, new byte[]{ 16, 62, 0 } ),
	new SingleColourLookup( new byte[]{32, 0, 2 }, new byte[]{ 16, 63, 0 } ),
	new SingleColourLookup( new byte[]{32, 0, 1 }, new byte[]{ 17, 62, 0 } ),
	new SingleColourLookup( new byte[]{32, 0, 0 }, new byte[]{ 25, 47, 0 } ),
	new SingleColourLookup( new byte[]{32, 0, 1 }, new byte[]{ 17, 63, 0 } ),
	new SingleColourLookup( new byte[]{32, 0, 2 }, new byte[]{ 18, 62, 0 } ),
	new SingleColourLookup( new byte[]{33, 0, 1 }, new byte[]{ 18, 63, 0 } ),
	new SingleColourLookup( new byte[]{33, 0, 0 }, new byte[]{ 27, 46, 0 } ),
	new SingleColourLookup( new byte[]{33, 0, 1 }, new byte[]{ 19, 62, 0 } ),
	new SingleColourLookup( new byte[]{33, 0, 2 }, new byte[]{ 19, 63, 0 } ),
	new SingleColourLookup( new byte[]{34, 0, 1 }, new byte[]{ 20, 62, 0 } ),
	new SingleColourLookup( new byte[]{34, 0, 0 }, new byte[]{ 28, 47, 0 } ),
	new SingleColourLookup( new byte[]{34, 0, 1 }, new byte[]{ 20, 63, 0 } ),
	new SingleColourLookup( new byte[]{34, 0, 2 }, new byte[]{ 21, 62, 0 } ),
	new SingleColourLookup( new byte[]{35, 0, 1 }, new byte[]{ 21, 63, 0 } ),
	new SingleColourLookup( new byte[]{35, 0, 0 }, new byte[]{ 30, 46, 0 } ),
	new SingleColourLookup( new byte[]{35, 0, 1 }, new byte[]{ 22, 62, 0 } ),
	new SingleColourLookup( new byte[]{35, 0, 2 }, new byte[]{ 22, 63, 0 } ),
	new SingleColourLookup( new byte[]{36, 0, 1 }, new byte[]{ 23, 62, 0 } ),
	new SingleColourLookup( new byte[]{36, 0, 0 }, new byte[]{ 31, 47, 0 } ),
	new SingleColourLookup( new byte[]{36, 0, 1 }, new byte[]{ 23, 63, 0 } ),
	new SingleColourLookup( new byte[]{36, 0, 2 }, new byte[]{ 24, 62, 0 } ),
	new SingleColourLookup( new byte[]{37, 0, 1 }, new byte[]{ 24, 63, 0 } ),
	new SingleColourLookup( new byte[]{37, 0, 0 }, new byte[]{ 32, 47, 0 } ),
	new SingleColourLookup( new byte[]{37, 0, 1 }, new byte[]{ 25, 62, 0 } ),
	new SingleColourLookup( new byte[]{37, 0, 2 }, new byte[]{ 25, 63, 0 } ),
	new SingleColourLookup( new byte[]{38, 0, 1 }, new byte[]{ 26, 62, 0 } ),
	new SingleColourLookup( new byte[]{38, 0, 0 }, new byte[]{ 32, 50, 0 } ),
	new SingleColourLookup( new byte[]{38, 0, 1 }, new byte[]{ 26, 63, 0 } ),
	new SingleColourLookup( new byte[]{38, 0, 2 }, new byte[]{ 27, 62, 0 } ),
	new SingleColourLookup( new byte[]{39, 0, 1 }, new byte[]{ 27, 63, 0 } ),
	new SingleColourLookup( new byte[]{39, 0, 0 }, new byte[]{ 32, 53, 0 } ),
	new SingleColourLookup( new byte[]{39, 0, 1 }, new byte[]{ 28, 62, 0 } ),
	new SingleColourLookup( new byte[]{39, 0, 2 }, new byte[]{ 28, 63, 0 } ),
	new SingleColourLookup( new byte[]{40, 0, 1 }, new byte[]{ 29, 62, 0 } ),
	new SingleColourLookup( new byte[]{40, 0, 0 }, new byte[]{ 32, 56, 0 } ),
	new SingleColourLookup( new byte[]{40, 0, 1 }, new byte[]{ 29, 63, 0 } ),
	new SingleColourLookup( new byte[]{40, 0, 2 }, new byte[]{ 30, 62, 0 } ),
	new SingleColourLookup( new byte[]{41, 0, 1 }, new byte[]{ 30, 63, 0 } ),
	new SingleColourLookup( new byte[]{41, 0, 0 }, new byte[]{ 32, 59, 0 } ),
	new SingleColourLookup( new byte[]{41, 0, 1 }, new byte[]{ 31, 62, 0 } ),
	new SingleColourLookup( new byte[]{41, 0, 2 }, new byte[]{ 31, 63, 0 } ),
	new SingleColourLookup( new byte[]{42, 0, 1 }, new byte[]{ 32, 61, 0 } ),
	new SingleColourLookup( new byte[]{42, 0, 0 }, new byte[]{ 32, 62, 0 } ),
	new SingleColourLookup( new byte[]{42, 0, 1 }, new byte[]{ 32, 63, 0 } ),
	new SingleColourLookup( new byte[]{42, 0, 2 }, new byte[]{ 41, 46, 0 } ),
	new SingleColourLookup( new byte[]{43, 0, 1 }, new byte[]{ 33, 62, 0 } ),
	new SingleColourLookup( new byte[]{43, 0, 0 }, new byte[]{ 33, 63, 0 } ),
	new SingleColourLookup( new byte[]{43, 0, 1 }, new byte[]{ 34, 62, 0 } ),
	new SingleColourLookup( new byte[]{43, 0, 2 }, new byte[]{ 42, 47, 0 } ),
	new SingleColourLookup( new byte[]{44, 0, 1 }, new byte[]{ 34, 63, 0 } ),
	new SingleColourLookup( new byte[]{44, 0, 0 }, new byte[]{ 35, 62, 0 } ),
	new SingleColourLookup( new byte[]{44, 0, 1 }, new byte[]{ 35, 63, 0 } ),
	new SingleColourLookup( new byte[]{44, 0, 2 }, new byte[]{ 44, 46, 0 } ),
	new SingleColourLookup( new byte[]{45, 0, 1 }, new byte[]{ 36, 62, 0 } ),
	new SingleColourLookup( new byte[]{45, 0, 0 }, new byte[]{ 36, 63, 0 } ),
	new SingleColourLookup( new byte[]{45, 0, 1 }, new byte[]{ 37, 62, 0 } ),
	new SingleColourLookup( new byte[]{45, 0, 2 }, new byte[]{ 45, 47, 0 } ),
	new SingleColourLookup( new byte[]{46, 0, 1 }, new byte[]{ 37, 63, 0 } ),
	new SingleColourLookup( new byte[]{46, 0, 0 }, new byte[]{ 38, 62, 0 } ),
	new SingleColourLookup( new byte[]{46, 0, 1 }, new byte[]{ 38, 63, 0 } ),
	new SingleColourLookup( new byte[]{46, 0, 2 }, new byte[]{ 47, 46, 0 } ),
	new SingleColourLookup( new byte[]{47, 0, 1 }, new byte[]{ 39, 62, 0 } ),
	new SingleColourLookup( new byte[]{47, 0, 0 }, new byte[]{ 39, 63, 0 } ),
	new SingleColourLookup( new byte[]{47, 0, 1 }, new byte[]{ 40, 62, 0 } ),
	new SingleColourLookup( new byte[]{47, 0, 2 }, new byte[]{ 48, 46, 0 } ),
	new SingleColourLookup( new byte[]{48, 0, 2 }, new byte[]{ 40, 63, 0 } ),
	new SingleColourLookup( new byte[]{48, 0, 1 }, new byte[]{ 41, 62, 0 } ),
	new SingleColourLookup( new byte[]{48, 0, 0 }, new byte[]{ 41, 63, 0 } ),
	new SingleColourLookup( new byte[]{48, 0, 1 }, new byte[]{ 48, 49, 0 } ),
	new SingleColourLookup( new byte[]{48, 0, 2 }, new byte[]{ 42, 62, 0 } ),
	new SingleColourLookup( new byte[]{49, 0, 1 }, new byte[]{ 42, 63, 0 } ),
	new SingleColourLookup( new byte[]{49, 0, 0 }, new byte[]{ 43, 62, 0 } ),
	new SingleColourLookup( new byte[]{49, 0, 1 }, new byte[]{ 48, 52, 0 } ),
	new SingleColourLookup( new byte[]{49, 0, 2 }, new byte[]{ 43, 63, 0 } ),
	new SingleColourLookup( new byte[]{50, 0, 1 }, new byte[]{ 44, 62, 0 } ),
	new SingleColourLookup( new byte[]{50, 0, 0 }, new byte[]{ 44, 63, 0 } ),
	new SingleColourLookup( new byte[]{50, 0, 1 }, new byte[]{ 48, 55, 0 } ),
	new SingleColourLookup( new byte[]{50, 0, 2 }, new byte[]{ 45, 62, 0 } ),
	new SingleColourLookup( new byte[]{51, 0, 1 }, new byte[]{ 45, 63, 0 } ),
	new SingleColourLookup( new byte[]{51, 0, 0 }, new byte[]{ 46, 62, 0 } ),
	new SingleColourLookup( new byte[]{51, 0, 1 }, new byte[]{ 48, 58, 0 } ),
	new SingleColourLookup( new byte[]{51, 0, 2 }, new byte[]{ 46, 63, 0 } ),
	new SingleColourLookup( new byte[]{52, 0, 1 }, new byte[]{ 47, 62, 0 } ),
	new SingleColourLookup( new byte[]{52, 0, 0 }, new byte[]{ 47, 63, 0 } ),
	new SingleColourLookup( new byte[]{52, 0, 1 }, new byte[]{ 48, 61, 0 } ),
	new SingleColourLookup( new byte[]{52, 0, 2 }, new byte[]{ 48, 62, 0 } ),
	new SingleColourLookup( new byte[]{53, 0, 1 }, new byte[]{ 56, 47, 0 } ),
	new SingleColourLookup( new byte[]{53, 0, 0 }, new byte[]{ 48, 63, 0 } ),
	new SingleColourLookup( new byte[]{53, 0, 1 }, new byte[]{ 49, 62, 0 } ),
	new SingleColourLookup( new byte[]{53, 0, 2 }, new byte[]{ 49, 63, 0 } ),
	new SingleColourLookup( new byte[]{54, 0, 1 }, new byte[]{ 58, 46, 0 } ),
	new SingleColourLookup( new byte[]{54, 0, 0 }, new byte[]{ 50, 62, 0 } ),
	new SingleColourLookup( new byte[]{54, 0, 1 }, new byte[]{ 50, 63, 0 } ),
	new SingleColourLookup( new byte[]{54, 0, 2 }, new byte[]{ 51, 62, 0 } ),
	new SingleColourLookup( new byte[]{55, 0, 1 }, new byte[]{ 59, 47, 0 } ),
	new SingleColourLookup( new byte[]{55, 0, 0 }, new byte[]{ 51, 63, 0 } ),
	new SingleColourLookup( new byte[]{55, 0, 1 }, new byte[]{ 52, 62, 0 } ),
	new SingleColourLookup( new byte[]{55, 0, 2 }, new byte[]{ 52, 63, 0 } ),
	new SingleColourLookup( new byte[]{56, 0, 1 }, new byte[]{ 61, 46, 0 } ),
	new SingleColourLookup( new byte[]{56, 0, 0 }, new byte[]{ 53, 62, 0 } ),
	new SingleColourLookup( new byte[]{56, 0, 1 }, new byte[]{ 53, 63, 0 } ),
	new SingleColourLookup( new byte[]{56, 0, 2 }, new byte[]{ 54, 62, 0 } ),
	new SingleColourLookup( new byte[]{57, 0, 1 }, new byte[]{ 62, 47, 0 } ),
	new SingleColourLookup( new byte[]{57, 0, 0 }, new byte[]{ 54, 63, 0 } ),
	new SingleColourLookup( new byte[]{57, 0, 1 }, new byte[]{ 55, 62, 0 } ),
	new SingleColourLookup( new byte[]{57, 0, 2 }, new byte[]{ 55, 63, 0 } ),
	new SingleColourLookup( new byte[]{58, 0, 1 }, new byte[]{ 56, 62, 1 } ),
	new SingleColourLookup( new byte[]{58, 0, 0 }, new byte[]{ 56, 62, 0 } ),
	new SingleColourLookup( new byte[]{58, 0, 1 }, new byte[]{ 56, 63, 0 } ),
	new SingleColourLookup( new byte[]{58, 0, 2 }, new byte[]{ 57, 62, 0 } ),
	new SingleColourLookup( new byte[]{59, 0, 1 }, new byte[]{ 57, 63, 1 } ),
	new SingleColourLookup( new byte[]{59, 0, 0 }, new byte[]{ 57, 63, 0 } ),
	new SingleColourLookup( new byte[]{59, 0, 1 }, new byte[]{ 58, 62, 0 } ),
	new SingleColourLookup( new byte[]{59, 0, 2 }, new byte[]{ 58, 63, 0 } ),
	new SingleColourLookup( new byte[]{60, 0, 1 }, new byte[]{ 59, 62, 1 } ),
	new SingleColourLookup( new byte[]{60, 0, 0 }, new byte[]{ 59, 62, 0 } ),
	new SingleColourLookup( new byte[]{60, 0, 1 }, new byte[]{ 59, 63, 0 } ),
	new SingleColourLookup( new byte[]{60, 0, 2 }, new byte[]{ 60, 62, 0 } ),
	new SingleColourLookup( new byte[]{61, 0, 1 }, new byte[]{ 60, 63, 1 } ),
	new SingleColourLookup( new byte[]{61, 0, 0 }, new byte[]{ 60, 63, 0 } ),
	new SingleColourLookup( new byte[]{61, 0, 1 }, new byte[]{ 61, 62, 0 } ),
	new SingleColourLookup( new byte[]{61, 0, 2 }, new byte[]{ 61, 63, 0 } ),
	new SingleColourLookup( new byte[]{62, 0, 1 }, new byte[]{ 62, 62, 1 } ),
	new SingleColourLookup( new byte[]{62, 0, 0 }, new byte[]{ 62, 62, 0 } ),
	new SingleColourLookup( new byte[]{62, 0, 1 }, new byte[]{ 62, 63, 0 } ),
	new SingleColourLookup( new byte[]{62, 0, 2 }, new byte[]{ 63, 62, 0 } ),
	new SingleColourLookup( new byte[]{63, 0, 1 }, new byte[]{ 63, 63, 1 } ),
	new SingleColourLookup( new byte[]{63, 0, 0 }, new byte[]{ 63, 63, 0 } )
};
#endregion

static int FloatToInt( float a, int limit )
{
	// use ANSI round-to-zero behaviour to get round-to-nearest
	int i = ( int )( a + 0.5f );

	// clamp to the limit
	if( i < 0 )
		i = 0;
	else if( i > limit )
		i = limit; 

	// done
	return i;
}

public SingleColourFit( ColourSet colours, SquishFlags flags ) : base(colours, flags)
{
	// grab the single colour
	Vector3[] values = m_colours.GetPoints();
	m_colour[0] = ( byte )FloatToInt( 255.0f*values[0].x, 255 );
	m_colour[1] = ( byte )FloatToInt( 255.0f*values[0].y, 255 );
	m_colour[2] = ( byte )FloatToInt( 255.0f*values[0].z, 255 );
		
	// initialise the best error
	m_besterror = int.MaxValue;
}

public override unsafe void Compress3( byte* block )
{
	// build the table of lookups
	SingleColourLookup[][] lookups = 
	{
		lookup_5_3, 
		lookup_6_3, 
		lookup_5_3
	};
	
	// find the best end-points and index
	ComputeEndPoints( lookups );
	
	// build the block if we win
	if( m_error < m_besterror )
	{
		// remap the indices
		byte[] indices = new byte[16];
		m_colours.RemapIndices( m_index, indices );
		
		// save the block
		colorblock.WriteColourBlock3( m_start, m_end, indices, block );

		// save the error
		m_besterror = m_error;
	}
}

public override unsafe void Compress4( byte* block )
{
	// build the table of lookups
	SingleColourLookup [][] lookups = 
	{
		lookup_5_4, 
		lookup_6_4, 
		lookup_5_4
	};
	
	// find the best end-points and index
	ComputeEndPoints( lookups );
	
	// build the block if we win
	if( m_error < m_besterror )
	{
		// remap the indices
		byte[] indices = new byte[16];
		m_colours.RemapIndices( m_index, indices );
		
		// save the block
		colorblock.WriteColourBlock4( m_start, m_end, indices, block );

		// save the error
		m_besterror = m_error;
	}
}

void ComputeEndPoints( SingleColourLookup[][] lookups )
{
	// check each index combination (endpoint or intermediate)
	m_error = int.MaxValue;
	for( int index = 0; index < 2; ++index )
	{
		// check the error for this codebook index
		SourceBlock[] sources = new SourceBlock[3];
		int error = 0;
		for( int channel = 0; channel < 3; ++channel )
		{
			// grab the lookup table and index for this channel
			SingleColourLookup[] lookup = lookups[channel];
			int target = m_colour[channel];
			
			// store a pointer to the source for this channel
            sources[channel] = lookup[target].sources[index];
			
			// accumulate the error
			int diff = sources[channel].error;
			error += diff*diff;			
		}
		
		// keep it if the error is lower
		if( error < m_error )
		{
			m_start = new Vector3(
				( float )sources[0].start/31.0f, 
				( float )sources[1].start/63.0f, 
				( float )sources[2].start/31.0f
			);
			m_end = new Vector3(
				( float )sources[0].end/31.0f, 
				( float )sources[1].end/63.0f, 
				( float )sources[2].end/31.0f
			);
			m_index[0] = ( byte )( 2*index );
			m_error = error;
		}
	}
}

    }
}
